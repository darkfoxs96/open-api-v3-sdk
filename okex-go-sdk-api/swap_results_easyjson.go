// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package okex

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(in *jlexer.Lexer, out *SwapTradeList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapTradeList, 0, 0)
			} else {
				*out = SwapTradeList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 BaseTradeInfo
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(out *jwriter.Writer, in SwapTradeList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapTradeList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapTradeList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapTradeList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapTradeList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(in *jlexer.Lexer, out *SwapTickerList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapTickerList, 0, 0)
			} else {
				*out = SwapTickerList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v4 BaseTickerInfo
			(v4).UnmarshalEasyJSON(in)
			*out = append(*out, v4)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(out *jwriter.Writer, in SwapTickerList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v5, v6 := range in {
			if v5 > 0 {
				out.RawByte(',')
			}
			(v6).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapTickerList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapTickerList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapTickerList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapTickerList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(in *jlexer.Lexer, out *SwapRate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "rate":
			out.Rate = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(out *jwriter.Writer, in SwapRate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"rate\":"
		out.RawString(prefix)
		out.String(string(in.Rate))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapRate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapRate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapRate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapRate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(in *jlexer.Lexer, out *SwapPriceLimit) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "lowest":
			out.Lowest = string(in.String())
		case "highest":
			out.Highest = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(out *jwriter.Writer, in SwapPriceLimit) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"lowest\":"
		out.RawString(prefix)
		out.String(string(in.Lowest))
	}
	{
		const prefix string = ",\"highest\":"
		out.RawString(prefix)
		out.String(string(in.Highest))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPriceLimit) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPriceLimit) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPriceLimit) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPriceLimit) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(in *jlexer.Lexer, out *SwapPositionList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapPositionList, 0, 0)
			} else {
				*out = SwapPositionList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v7 SwapPosition
			(v7).UnmarshalEasyJSON(in)
			*out = append(*out, v7)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(out *jwriter.Writer, in SwapPositionList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v8, v9 := range in {
			if v8 > 0 {
				out.RawByte(',')
			}
			(v9).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPositionList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPositionList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPositionList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPositionList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(in *jlexer.Lexer, out *SwapPositionHolding) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "liquidation_price":
			out.LiquidationPrice = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "avail_position":
			out.AvailPosition = string(in.String())
		case "avg_cost":
			out.AvgCost = string(in.String())
		case "settlement_price":
			out.SettlementPrice = string(in.String())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "leverage":
			out.Leverage = string(in.String())
		case "realized_pnl":
			out.RealizedPnl = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "margin":
			out.Margin = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(out *jwriter.Writer, in SwapPositionHolding) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"liquidation_price\":"
		out.RawString(prefix[1:])
		out.String(string(in.LiquidationPrice))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"avail_position\":"
		out.RawString(prefix)
		out.String(string(in.AvailPosition))
	}
	{
		const prefix string = ",\"avg_cost\":"
		out.RawString(prefix)
		out.String(string(in.AvgCost))
	}
	{
		const prefix string = ",\"settlement_price\":"
		out.RawString(prefix)
		out.String(string(in.SettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.String(string(in.Leverage))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.String(string(in.RealizedPnl))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"margin\":"
		out.RawString(prefix)
		out.String(string(in.Margin))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPositionHolding) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPositionHolding) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPositionHolding) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPositionHolding) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(in *jlexer.Lexer, out *SwapPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "holding":
			if in.IsNull() {
				in.Skip()
				out.Holding = nil
			} else {
				in.Delim('[')
				if out.Holding == nil {
					if !in.IsDelim(']') {
						out.Holding = make([]SwapPositionHolding, 0, 0)
					} else {
						out.Holding = []SwapPositionHolding{}
					}
				} else {
					out.Holding = (out.Holding)[:0]
				}
				for !in.IsDelim(']') {
					var v10 SwapPositionHolding
					(v10).UnmarshalEasyJSON(in)
					out.Holding = append(out.Holding, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(out *jwriter.Writer, in SwapPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix[1:])
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"holding\":"
		out.RawString(prefix)
		if in.Holding == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Holding {
				if v11 > 0 {
					out.RawByte(',')
				}
				(v12).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(in *jlexer.Lexer, out *SwapOrdersResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.OrderInfo = nil
			} else {
				in.Delim('[')
				if out.OrderInfo == nil {
					if !in.IsDelim(']') {
						out.OrderInfo = make([]BaseSwapOrderResult, 0, 0)
					} else {
						out.OrderInfo = []BaseSwapOrderResult{}
					}
				} else {
					out.OrderInfo = (out.OrderInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v13 BaseSwapOrderResult
					(v13).UnmarshalEasyJSON(in)
					out.OrderInfo = append(out.OrderInfo, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(out *jwriter.Writer, in SwapOrdersResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix[1:])
		if in.OrderInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.OrderInfo {
				if v14 > 0 {
					out.RawByte(',')
				}
				(v15).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapOrdersResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapOrdersResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapOrdersResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapOrdersResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(in *jlexer.Lexer, out *SwapOrdersInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.OrderInfo = nil
			} else {
				in.Delim('[')
				if out.OrderInfo == nil {
					if !in.IsDelim(']') {
						out.OrderInfo = make([]BaseOrderInfo, 0, 0)
					} else {
						out.OrderInfo = []BaseOrderInfo{}
					}
				} else {
					out.OrderInfo = (out.OrderInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v16 BaseOrderInfo
					(v16).UnmarshalEasyJSON(in)
					out.OrderInfo = append(out.OrderInfo, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(out *jwriter.Writer, in SwapOrdersInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix[1:])
		if in.OrderInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.OrderInfo {
				if v17 > 0 {
					out.RawByte(',')
				}
				(v18).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapOrdersInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapOrdersInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapOrdersInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapOrdersInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(in *jlexer.Lexer, out *SwapOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "error_message":
			out.ErrorMessage = string(in.String())
		case "error_code":
			out.ErrorCode = string(in.String())
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(out *jwriter.Writer, in SwapOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.String(string(in.ErrorCode))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(in *jlexer.Lexer, out *SwapMarkPrice) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "mark_price":
			out.MarkPrice = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(out *jwriter.Writer, in SwapMarkPrice) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"mark_price\":"
		out.RawString(prefix)
		out.String(string(in.MarkPrice))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapMarkPrice) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapMarkPrice) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapMarkPrice) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapMarkPrice) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(in *jlexer.Lexer, out *SwapLiquidationList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapLiquidationList, 0, 0)
			} else {
				*out = SwapLiquidationList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v19 BaseLiquidationInfo
			(v19).UnmarshalEasyJSON(in)
			*out = append(*out, v19)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(out *jwriter.Writer, in SwapLiquidationList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v20, v21 := range in {
			if v20 > 0 {
				out.RawByte(',')
			}
			(v21).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapLiquidationList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapLiquidationList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapLiquidationList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapLiquidationList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(in *jlexer.Lexer, out *SwapInstrumentList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapInstrumentList, 0, 0)
			} else {
				*out = SwapInstrumentList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v22 BaseInstrumentInfo
			(v22).UnmarshalEasyJSON(in)
			*out = append(*out, v22)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(out *jwriter.Writer, in SwapInstrumentList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v23, v24 := range in {
			if v23 > 0 {
				out.RawByte(',')
			}
			(v24).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapInstrumentList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapInstrumentList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapInstrumentList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapInstrumentList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(in *jlexer.Lexer, out *SwapInstrumentDepth) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "timestamp":
			out.Timestamp = string(in.String())
		case "time":
			out.Time = string(in.String())
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([]BaesDepthInfo, 0, 2)
					} else {
						out.Bids = []BaesDepthInfo{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v25 BaesDepthInfo
					if in.IsNull() {
						in.Skip()
						v25 = nil
					} else {
						in.Delim('[')
						if v25 == nil {
							if !in.IsDelim(']') {
								v25 = make(BaesDepthInfo, 0, 4)
							} else {
								v25 = BaesDepthInfo{}
							}
						} else {
							v25 = (v25)[:0]
						}
						for !in.IsDelim(']') {
							var v26 interface{}
							if m, ok := v26.(easyjson.Unmarshaler); ok {
								m.UnmarshalEasyJSON(in)
							} else if m, ok := v26.(json.Unmarshaler); ok {
								_ = m.UnmarshalJSON(in.Raw())
							} else {
								v26 = in.Interface()
							}
							v25 = append(v25, v26)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v25)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([]BaesDepthInfo, 0, 2)
					} else {
						out.Asks = []BaesDepthInfo{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v27 BaesDepthInfo
					if in.IsNull() {
						in.Skip()
						v27 = nil
					} else {
						in.Delim('[')
						if v27 == nil {
							if !in.IsDelim(']') {
								v27 = make(BaesDepthInfo, 0, 4)
							} else {
								v27 = BaesDepthInfo{}
							}
						} else {
							v27 = (v27)[:0]
						}
						for !in.IsDelim(']') {
							var v28 interface{}
							if m, ok := v28.(easyjson.Unmarshaler); ok {
								m.UnmarshalEasyJSON(in)
							} else if m, ok := v28.(json.Unmarshaler); ok {
								_ = m.UnmarshalJSON(in.Raw())
							} else {
								v28 = in.Interface()
							}
							v27 = append(v27, v28)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v27)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(out *jwriter.Writer, in SwapInstrumentDepth) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix[1:])
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"time\":"
		out.RawString(prefix)
		out.String(string(in.Time))
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v29, v30 := range in.Bids {
				if v29 > 0 {
					out.RawByte(',')
				}
				if v30 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v31, v32 := range v30 {
						if v31 > 0 {
							out.RawByte(',')
						}
						if m, ok := v32.(easyjson.Marshaler); ok {
							m.MarshalEasyJSON(out)
						} else if m, ok := v32.(json.Marshaler); ok {
							out.Raw(m.MarshalJSON())
						} else {
							out.Raw(json.Marshal(v32))
						}
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix)
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v33, v34 := range in.Asks {
				if v33 > 0 {
					out.RawByte(',')
				}
				if v34 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v35, v36 := range v34 {
						if v35 > 0 {
							out.RawByte(',')
						}
						if m, ok := v36.(easyjson.Marshaler); ok {
							m.MarshalEasyJSON(out)
						} else if m, ok := v36.(json.Marshaler); ok {
							out.Raw(m.MarshalJSON())
						} else {
							out.Raw(json.Marshal(v36))
						}
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapInstrumentDepth) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapInstrumentDepth) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapInstrumentDepth) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapInstrumentDepth) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(in *jlexer.Lexer, out *SwapIndexInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "index":
			out.Index = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(out *jwriter.Writer, in SwapIndexInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"index\":"
		out.RawString(prefix)
		out.String(string(in.Index))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapIndexInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapIndexInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapIndexInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapIndexInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(in *jlexer.Lexer, out *SwapHistoricalFundingRateList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapHistoricalFundingRateList, 0, 0)
			} else {
				*out = SwapHistoricalFundingRateList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v37 BaseHistoricalFundingRate
			(v37).UnmarshalEasyJSON(in)
			*out = append(*out, v37)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(out *jwriter.Writer, in SwapHistoricalFundingRateList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v38, v39 := range in {
			if v38 > 0 {
				out.RawByte(',')
			}
			(v39).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapHistoricalFundingRateList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapHistoricalFundingRateList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapHistoricalFundingRateList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapHistoricalFundingRateList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(in *jlexer.Lexer, out *SwapFundingTime) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "funding_time":
			out.FundingTime = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(out *jwriter.Writer, in SwapFundingTime) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"funding_time\":"
		out.RawString(prefix)
		out.String(string(in.FundingTime))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapFundingTime) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapFundingTime) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapFundingTime) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapFundingTime) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(in *jlexer.Lexer, out *SwapFillsInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapFillsInfo, 0, 0)
			} else {
				*out = SwapFillsInfo{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v40 BaseFillInfo
			(v40).UnmarshalEasyJSON(in)
			*out = append(*out, v40)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(out *jwriter.Writer, in SwapFillsInfo) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v41, v42 := range in {
			if v41 > 0 {
				out.RawByte(',')
			}
			(v42).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapFillsInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapFillsInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapFillsInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapFillsInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(in *jlexer.Lexer, out *SwapCancelOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error_message":
			out.ErrorMessage = string(in.String())
		case "error_code":
			out.ErrorCode = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(out *jwriter.Writer, in SwapCancelOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix[1:])
		out.String(string(in.ErrorMessage))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.String(string(in.ErrorCode))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapCancelOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapCancelOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapCancelOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapCancelOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(in *jlexer.Lexer, out *SwapBatchCancelOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "ids":
			if in.IsNull() {
				in.Skip()
				out.Ids = nil
			} else {
				in.Delim('[')
				if out.Ids == nil {
					if !in.IsDelim(']') {
						out.Ids = make([]string, 0, 4)
					} else {
						out.Ids = []string{}
					}
				} else {
					out.Ids = (out.Ids)[:0]
				}
				for !in.IsDelim(']') {
					var v43 string
					v43 = string(in.String())
					out.Ids = append(out.Ids, v43)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "result":
			out.Result = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(out *jwriter.Writer, in SwapBatchCancelOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"ids\":"
		out.RawString(prefix)
		if in.Ids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v44, v45 := range in.Ids {
				if v44 > 0 {
					out.RawByte(',')
				}
				out.String(string(v45))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapBatchCancelOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapBatchCancelOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapBatchCancelOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapBatchCancelOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(in *jlexer.Lexer, out *SwapAccountsSetting) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "long_leverage":
			out.LongLeverage = string(in.String())
		case "short_leverage":
			out.ShortLeverage = string(in.String())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(out *jwriter.Writer, in SwapAccountsSetting) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"long_leverage\":"
		out.RawString(prefix)
		out.String(string(in.LongLeverage))
	}
	{
		const prefix string = ",\"short_leverage\":"
		out.RawString(prefix)
		out.String(string(in.ShortLeverage))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccountsSetting) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccountsSetting) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccountsSetting) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccountsSetting) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(in *jlexer.Lexer, out *SwapAccountsLedgerList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapAccountsLedgerList, 0, 0)
			} else {
				*out = SwapAccountsLedgerList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v46 BaseLedgerInfo
			(v46).UnmarshalEasyJSON(in)
			*out = append(*out, v46)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(out *jwriter.Writer, in SwapAccountsLedgerList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v47, v48 := range in {
			if v47 > 0 {
				out.RawByte(',')
			}
			(v48).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccountsLedgerList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccountsLedgerList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccountsLedgerList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccountsLedgerList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(in *jlexer.Lexer, out *SwapAccounts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "info":
			if in.IsNull() {
				in.Skip()
				out.Info = nil
			} else {
				in.Delim('[')
				if out.Info == nil {
					if !in.IsDelim(']') {
						out.Info = make([]SwapAccountInfo, 0, 0)
					} else {
						out.Info = []SwapAccountInfo{}
					}
				} else {
					out.Info = (out.Info)[:0]
				}
				for !in.IsDelim(']') {
					var v49 SwapAccountInfo
					(v49).UnmarshalEasyJSON(in)
					out.Info = append(out.Info, v49)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(out *jwriter.Writer, in SwapAccounts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix[1:])
		if in.Info == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v50, v51 := range in.Info {
				if v50 > 0 {
					out.RawByte(',')
				}
				(v51).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccounts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccounts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccounts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccounts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(in *jlexer.Lexer, out *SwapAccountInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "margin_frozen":
			out.MarginFrozen = string(in.String())
		case "total_avail_balance":
			out.TotalAvailBalance = string(in.String())
		case "margin_ratio":
			out.MarginRatio = string(in.String())
		case "realized_pnl":
			out.RealizedPnl = string(in.String())
		case "unrealized_pnl":
			out.UnrealizedPnl = string(in.String())
		case "fixed_balance":
			out.FixedBalance = string(in.String())
		case "equity":
			out.Equity = string(in.String())
		case "margin":
			out.Margin = string(in.String())
		case "margin_mode":
			out.MarginMode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(out *jwriter.Writer, in SwapAccountInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"margin_frozen\":"
		out.RawString(prefix)
		out.String(string(in.MarginFrozen))
	}
	{
		const prefix string = ",\"total_avail_balance\":"
		out.RawString(prefix)
		out.String(string(in.TotalAvailBalance))
	}
	{
		const prefix string = ",\"margin_ratio\":"
		out.RawString(prefix)
		out.String(string(in.MarginRatio))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.String(string(in.RealizedPnl))
	}
	{
		const prefix string = ",\"unrealized_pnl\":"
		out.RawString(prefix)
		out.String(string(in.UnrealizedPnl))
	}
	{
		const prefix string = ",\"fixed_balance\":"
		out.RawString(prefix)
		out.String(string(in.FixedBalance))
	}
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix)
		out.String(string(in.Equity))
	}
	{
		const prefix string = ",\"margin\":"
		out.RawString(prefix)
		out.String(string(in.Margin))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccountInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccountInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccountInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccountInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(in *jlexer.Lexer, out *SwapAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "info":
			(out.Info).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(out *jwriter.Writer, in SwapAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix[1:])
		(in.Info).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(in *jlexer.Lexer, out *BaseTradeInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "timestamp":
			out.Timestamp = string(in.String())
		case "trade_id":
			out.TradeId = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(out *jwriter.Writer, in BaseTradeInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix[1:])
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix)
		out.String(string(in.TradeId))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseTradeInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseTradeInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseTradeInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseTradeInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(in *jlexer.Lexer, out *BaseTickerInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "last":
			out.Last = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "high_24h":
			out.High24h = string(in.String())
		case "volume_24h":
			out.Volume24h = string(in.String())
		case "low_24h":
			out.Low24h = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(out *jwriter.Writer, in BaseTickerInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.String(string(in.Last))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"high_24h\":"
		out.RawString(prefix)
		out.String(string(in.High24h))
	}
	{
		const prefix string = ",\"volume_24h\":"
		out.RawString(prefix)
		out.String(string(in.Volume24h))
	}
	{
		const prefix string = ",\"low_24h\":"
		out.RawString(prefix)
		out.String(string(in.Low24h))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseTickerInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseTickerInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseTickerInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseTickerInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(in *jlexer.Lexer, out *BaseSwapOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.OrderId = string(in.String())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "error_message":
			out.ErrorMessage = string(in.String())
		case "error_code":
			out.ErrorCode = string(in.String())
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(out *jwriter.Writer, in BaseSwapOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.String(string(in.ErrorCode))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseSwapOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseSwapOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseSwapOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseSwapOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(in *jlexer.Lexer, out *BaseOrderInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "price_avg":
			out.PriceAvg = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "fee":
			out.Fee = string(in.String())
		case "filled_qty":
			out.FilledQty = string(in.String())
		case "contract_val":
			out.ContractVal = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(out *jwriter.Writer, in BaseOrderInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"price_avg\":"
		out.RawString(prefix)
		out.String(string(in.PriceAvg))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.String(string(in.Fee))
	}
	{
		const prefix string = ",\"filled_qty\":"
		out.RawString(prefix)
		out.String(string(in.FilledQty))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.String(string(in.ContractVal))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOrderInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOrderInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOrderInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOrderInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(in *jlexer.Lexer, out *BaseLiquidationInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "loss":
			out.Loss = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(out *jwriter.Writer, in BaseLiquidationInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"loss\":"
		out.RawString(prefix)
		out.String(string(in.Loss))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseLiquidationInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseLiquidationInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseLiquidationInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseLiquidationInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(in *jlexer.Lexer, out *BaseLedgerInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "fee":
			out.Fee = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "amount":
			out.Amount = string(in.String())
		case "ledger_id":
			out.LedgerId = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(out *jwriter.Writer, in BaseLedgerInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.String(string(in.Fee))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.String(string(in.Amount))
	}
	{
		const prefix string = ",\"ledger_id\":"
		out.RawString(prefix)
		out.String(string(in.LedgerId))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseLedgerInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseLedgerInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseLedgerInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseLedgerInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(in *jlexer.Lexer, out *BaseInstrumentInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "quote_currency":
			out.QuoteCurrency = string(in.String())
		case "tick_size":
			out.TickSize = string(in.String())
		case "contract_val":
			out.ContractVal = string(in.String())
		case "listing":
			out.Listing = string(in.String())
		case "underlying_index":
			out.UnderlyingIndex = string(in.String())
		case "delivery":
			out.Delivery = string(in.String())
		case "coin":
			out.Coin = string(in.String())
		case "size_increment":
			out.SizeIncrement = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(out *jwriter.Writer, in BaseInstrumentInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"quote_currency\":"
		out.RawString(prefix)
		out.String(string(in.QuoteCurrency))
	}
	{
		const prefix string = ",\"tick_size\":"
		out.RawString(prefix)
		out.String(string(in.TickSize))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.String(string(in.ContractVal))
	}
	{
		const prefix string = ",\"listing\":"
		out.RawString(prefix)
		out.String(string(in.Listing))
	}
	{
		const prefix string = ",\"underlying_index\":"
		out.RawString(prefix)
		out.String(string(in.UnderlyingIndex))
	}
	{
		const prefix string = ",\"delivery\":"
		out.RawString(prefix)
		out.String(string(in.Delivery))
	}
	{
		const prefix string = ",\"coin\":"
		out.RawString(prefix)
		out.String(string(in.Coin))
	}
	{
		const prefix string = ",\"size_increment\":"
		out.RawString(prefix)
		out.String(string(in.SizeIncrement))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseInstrumentInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseInstrumentInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseInstrumentInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseInstrumentInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(in *jlexer.Lexer, out *BaseInstrumentAmount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "amount":
			out.Amount = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(out *jwriter.Writer, in BaseInstrumentAmount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.String(string(in.Amount))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseInstrumentAmount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseInstrumentAmount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseInstrumentAmount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseInstrumentAmount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(in *jlexer.Lexer, out *BaseHistoricalFundingRate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "interest_rate":
			out.InterestRate = string(in.String())
		case "funding_rate":
			out.FundingRate = string(in.String())
		case "funding_time":
			out.FundingTime = string(in.String())
		case "realized_rate":
			out.RealizedRate = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(out *jwriter.Writer, in BaseHistoricalFundingRate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"interest_rate\":"
		out.RawString(prefix)
		out.String(string(in.InterestRate))
	}
	{
		const prefix string = ",\"funding_rate\":"
		out.RawString(prefix)
		out.String(string(in.FundingRate))
	}
	{
		const prefix string = ",\"funding_time\":"
		out.RawString(prefix)
		out.String(string(in.FundingTime))
	}
	{
		const prefix string = ",\"realized_rate\":"
		out.RawString(prefix)
		out.String(string(in.RealizedRate))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseHistoricalFundingRate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseHistoricalFundingRate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseHistoricalFundingRate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseHistoricalFundingRate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(l, v)
}
func easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(in *jlexer.Lexer, out *BaseFillInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "order_qty":
			out.OrderQty = string(in.String())
		case "trade_id":
			out.TradeId = string(in.String())
		case "fee":
			out.Fee = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "exec_type":
			out.ExecType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(out *jwriter.Writer, in BaseFillInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"order_qty\":"
		out.RawString(prefix)
		out.String(string(in.OrderQty))
	}
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix)
		out.String(string(in.TradeId))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.String(string(in.Fee))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"exec_type\":"
		out.RawString(prefix)
		out.String(string(in.ExecType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseFillInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseFillInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson63cd4096EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseFillInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseFillInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson63cd4096DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(l, v)
}
