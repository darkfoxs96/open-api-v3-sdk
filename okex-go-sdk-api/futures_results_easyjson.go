// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package okex

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(in *jlexer.Lexer, out *ServerTime) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "iso":
			out.Iso = string(in.String())
		case "epoch":
			out.Epoch = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(out *jwriter.Writer, in ServerTime) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"iso\":"
		out.RawString(prefix[1:])
		out.String(string(in.Iso))
	}
	{
		const prefix string = ",\"epoch\":"
		out.RawString(prefix)
		out.String(string(in.Epoch))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ServerTime) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ServerTime) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ServerTime) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ServerTime) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(in *jlexer.Lexer, out *ResultReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(out *jwriter.Writer, in ResultReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResultReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResultReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResultReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResultReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(in *jlexer.Lexer, out *PageResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "From":
			out.From = int(in.Int())
		case "To":
			out.To = int(in.Int())
		case "Limit":
			out.Limit = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(out *jwriter.Writer, in PageResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"From\":"
		out.RawString(prefix[1:])
		out.Int(int(in.From))
	}
	{
		const prefix string = ",\"To\":"
		out.RawString(prefix)
		out.Int(int(in.To))
	}
	{
		const prefix string = ",\"Limit\":"
		out.RawString(prefix)
		out.Int(int(in.Limit))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PageResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PageResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PageResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PageResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(in *jlexer.Lexer, out *OrderInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "client_oid":
			out.ClientOid = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "error_code":
			out.ErrorCode = int64(in.Int64())
		case "error_message":
			out.ErrorMessage = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(out *jwriter.Writer, in OrderInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix[1:])
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.Int64(int64(in.ErrorCode))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrderInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrderInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrderInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrderInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(in *jlexer.Lexer, out *FuturesUsersSelfTrailingVolumesResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "FuturesUsersSelfTrailingVolumeResult":
			if in.IsNull() {
				in.Skip()
				out.FuturesUsersSelfTrailingVolumeResult = nil
			} else {
				in.Delim('[')
				if out.FuturesUsersSelfTrailingVolumeResult == nil {
					if !in.IsDelim(']') {
						out.FuturesUsersSelfTrailingVolumeResult = make([]FuturesUsersSelfTrailingVolumeResult, 0, 1)
					} else {
						out.FuturesUsersSelfTrailingVolumeResult = []FuturesUsersSelfTrailingVolumeResult{}
					}
				} else {
					out.FuturesUsersSelfTrailingVolumeResult = (out.FuturesUsersSelfTrailingVolumeResult)[:0]
				}
				for !in.IsDelim(']') {
					var v1 FuturesUsersSelfTrailingVolumeResult
					(v1).UnmarshalEasyJSON(in)
					out.FuturesUsersSelfTrailingVolumeResult = append(out.FuturesUsersSelfTrailingVolumeResult, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(out *jwriter.Writer, in FuturesUsersSelfTrailingVolumesResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"FuturesUsersSelfTrailingVolumeResult\":"
		out.RawString(prefix[1:])
		if in.FuturesUsersSelfTrailingVolumeResult == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.FuturesUsersSelfTrailingVolumeResult {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesUsersSelfTrailingVolumesResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesUsersSelfTrailingVolumesResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumesResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumesResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(in *jlexer.Lexer, out *FuturesUsersSelfTrailingVolumeResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "exchange_volume":
			out.ExchangeVolume = float64(in.Float64Str())
		case "volume":
			out.Volume = float64(in.Float64Str())
		case "recorded_at":
			out.RecordedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(out *jwriter.Writer, in FuturesUsersSelfTrailingVolumeResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"exchange_volume\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ExchangeVolume))
	}
	{
		const prefix string = ",\"volume\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Volume))
	}
	{
		const prefix string = ",\"recorded_at\":"
		out.RawString(prefix)
		out.String(string(in.RecordedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesUsersSelfTrailingVolumeResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesUsersSelfTrailingVolumeResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumeResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumeResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(in *jlexer.Lexer, out *FuturesPositionBase) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long_qty":
			out.LongQty = float64(in.Float64Str())
		case "long_avail_qty":
			out.LongAvailQty = float64(in.Float64Str())
		case "long_avg_cost":
			out.LongAvgCost = float64(in.Float64Str())
		case "long_settlement_price":
			out.LongSettlementPrice = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "short_qty":
			out.ShortQty = float64(in.Float64Str())
		case "short_avail_qty":
			out.ShortAvailQty = float64(in.Float64Str())
		case "short_avg_cost":
			out.ShortAvgCost = float64(in.Float64Str())
		case "short_settlement_price":
			out.ShortSettlementPrice = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(out *jwriter.Writer, in FuturesPositionBase) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long_qty\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.LongQty))
	}
	{
		const prefix string = ",\"long_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvailQty))
	}
	{
		const prefix string = ",\"long_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvgCost))
	}
	{
		const prefix string = ",\"long_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongSettlementPrice))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"short_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortQty))
	}
	{
		const prefix string = ",\"short_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvailQty))
	}
	{
		const prefix string = ",\"short_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvgCost))
	}
	{
		const prefix string = ",\"short_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortSettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesPositionBase) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesPositionBase) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesPositionBase) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesPositionBase) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(in *jlexer.Lexer, out *FuturesPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "MarginMode":
			out.MarginMode = string(in.String())
		case "CrossPosition":
			if in.IsNull() {
				in.Skip()
				out.CrossPosition = nil
			} else {
				in.Delim('[')
				if out.CrossPosition == nil {
					if !in.IsDelim(']') {
						out.CrossPosition = make([]FuturesCrossPositionHolding, 0, 0)
					} else {
						out.CrossPosition = []FuturesCrossPositionHolding{}
					}
				} else {
					out.CrossPosition = (out.CrossPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v4 FuturesCrossPositionHolding
					(v4).UnmarshalEasyJSON(in)
					out.CrossPosition = append(out.CrossPosition, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "FixedPosition":
			if in.IsNull() {
				in.Skip()
				out.FixedPosition = nil
			} else {
				in.Delim('[')
				if out.FixedPosition == nil {
					if !in.IsDelim(']') {
						out.FixedPosition = make([]FuturesFixedPositionHolding, 0, 0)
					} else {
						out.FixedPosition = []FuturesFixedPositionHolding{}
					}
				} else {
					out.FixedPosition = (out.FixedPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v5 FuturesFixedPositionHolding
					(v5).UnmarshalEasyJSON(in)
					out.FixedPosition = append(out.FixedPosition, v5)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(out *jwriter.Writer, in FuturesPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"MarginMode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"CrossPosition\":"
		out.RawString(prefix)
		if in.CrossPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v6, v7 := range in.CrossPosition {
				if v6 > 0 {
					out.RawByte(',')
				}
				(v7).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"FixedPosition\":"
		out.RawString(prefix)
		if in.FixedPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.FixedPosition {
				if v8 > 0 {
					out.RawByte(',')
				}
				(v9).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(in *jlexer.Lexer, out *FuturesNewOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "order_id":
			out.OrderId = int64(in.Int64Str())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(out *jwriter.Writer, in FuturesNewOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OrderId))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesNewOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesNewOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesNewOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesNewOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(in *jlexer.Lexer, out *FuturesMarkdown) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "mark_price":
			out.MarkPrice = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(out *jwriter.Writer, in FuturesMarkdown) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"mark_price\":"
		out.RawString(prefix)
		out.String(string(in.MarkPrice))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesMarkdown) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesMarkdown) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesMarkdown) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesMarkdown) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(in *jlexer.Lexer, out *FuturesInstrumentsResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "underlying_index":
			out.UnderlyingIndex = string(in.String())
		case "quote_currency":
			out.QuoteCurrency = string(in.String())
		case "tick_size":
			out.TickSize = float64(in.Float64Str())
		case "contract_val":
			out.ContractVal = float64(in.Float64Str())
		case "listing":
			out.Listing = string(in.String())
		case "delivery":
			out.Delivery = string(in.String())
		case "trade_increment":
			out.TradeIncrement = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(out *jwriter.Writer, in FuturesInstrumentsResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"underlying_index\":"
		out.RawString(prefix)
		out.String(string(in.UnderlyingIndex))
	}
	{
		const prefix string = ",\"quote_currency\":"
		out.RawString(prefix)
		out.String(string(in.QuoteCurrency))
	}
	{
		const prefix string = ",\"tick_size\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TickSize))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ContractVal))
	}
	{
		const prefix string = ",\"listing\":"
		out.RawString(prefix)
		out.String(string(in.Listing))
	}
	{
		const prefix string = ",\"delivery\":"
		out.RawString(prefix)
		out.String(string(in.Delivery))
	}
	{
		const prefix string = ",\"trade_increment\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TradeIncrement))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentsResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentsResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentsResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentsResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(in *jlexer.Lexer, out *FuturesInstrumentTradesResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "trade_id":
			out.TradeId = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "price":
			out.Price = float64(in.Float64Str())
		case "qty":
			out.Qty = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(out *jwriter.Writer, in FuturesInstrumentTradesResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.TradeId))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Price))
	}
	{
		const prefix string = ",\"qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Qty))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentTradesResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentTradesResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentTradesResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentTradesResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(in *jlexer.Lexer, out *FuturesInstrumentTickerResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "best_bid":
			out.BestBid = float64(in.Float64Str())
		case "best_ask":
			out.BestAsk = float64(in.Float64Str())
		case "high_24h":
			out.High24h = float64(in.Float64Str())
		case "low_24h":
			out.Low24h = float64(in.Float64Str())
		case "last":
			out.Last = float64(in.Float64Str())
		case "volume_24h":
			out.Volume24h = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(out *jwriter.Writer, in FuturesInstrumentTickerResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"best_bid\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.BestBid))
	}
	{
		const prefix string = ",\"best_ask\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.BestAsk))
	}
	{
		const prefix string = ",\"high_24h\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.High24h))
	}
	{
		const prefix string = ",\"low_24h\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Low24h))
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Last))
	}
	{
		const prefix string = ",\"volume_24h\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Volume24h))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentTickerResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentTickerResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentTickerResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentTickerResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(in *jlexer.Lexer, out *FuturesInstrumentPriceLimitResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "highest":
			out.Highest = float64(in.Float64Str())
		case "lowest":
			out.Lowest = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(out *jwriter.Writer, in FuturesInstrumentPriceLimitResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"highest\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Highest))
	}
	{
		const prefix string = ",\"lowest\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Lowest))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentPriceLimitResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentPriceLimitResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentPriceLimitResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentPriceLimitResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(in *jlexer.Lexer, out *FuturesInstrumentOpenInterestResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "amount":
			out.Amount = int64(in.Int64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(out *jwriter.Writer, in FuturesInstrumentOpenInterestResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Amount))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentOpenInterestResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentOpenInterestResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentOpenInterestResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentOpenInterestResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(in *jlexer.Lexer, out *FuturesInstrumentLiquidationResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "loss":
			out.Loss = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(out *jwriter.Writer, in FuturesInstrumentLiquidationResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"loss\":"
		out.RawString(prefix)
		out.String(string(in.Loss))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentLiquidationResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentLiquidationResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentLiquidationResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentLiquidationResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(in *jlexer.Lexer, out *FuturesInstrumentLiquidationListResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Page":
			(out.Page).UnmarshalEasyJSON(in)
		case "LiquidationList":
			if in.IsNull() {
				in.Skip()
				out.LiquidationList = nil
			} else {
				in.Delim('[')
				if out.LiquidationList == nil {
					if !in.IsDelim(']') {
						out.LiquidationList = make([]FuturesInstrumentLiquidationResult, 0, 0)
					} else {
						out.LiquidationList = []FuturesInstrumentLiquidationResult{}
					}
				} else {
					out.LiquidationList = (out.LiquidationList)[:0]
				}
				for !in.IsDelim(']') {
					var v10 FuturesInstrumentLiquidationResult
					(v10).UnmarshalEasyJSON(in)
					out.LiquidationList = append(out.LiquidationList, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(out *jwriter.Writer, in FuturesInstrumentLiquidationListResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Page\":"
		out.RawString(prefix[1:])
		(in.Page).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"LiquidationList\":"
		out.RawString(prefix)
		if in.LiquidationList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.LiquidationList {
				if v11 > 0 {
					out.RawByte(',')
				}
				(v12).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentLiquidationListResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentLiquidationListResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentLiquidationListResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentLiquidationListResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(in *jlexer.Lexer, out *FuturesInstrumentIndexResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "index":
			out.Index = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(out *jwriter.Writer, in FuturesInstrumentIndexResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"index\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Index))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentIndexResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentIndexResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentIndexResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentIndexResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(in *jlexer.Lexer, out *FuturesInstrumentEstimatedPriceResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "settlement_price":
			out.SettlementPrice = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(out *jwriter.Writer, in FuturesInstrumentEstimatedPriceResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.SettlementPrice))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentEstimatedPriceResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentEstimatedPriceResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentEstimatedPriceResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentEstimatedPriceResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(in *jlexer.Lexer, out *FuturesInstrumentCurrenciesResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "min_size":
			out.MinSize = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(out *jwriter.Writer, in FuturesInstrumentCurrenciesResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"min_size\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MinSize))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentCurrenciesResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentCurrenciesResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentCurrenciesResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentCurrenciesResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(in *jlexer.Lexer, out *FuturesInstrumentBookResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([][]string, 0, 2)
					} else {
						out.Asks = [][]string{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v13 []string
					if in.IsNull() {
						in.Skip()
						v13 = nil
					} else {
						in.Delim('[')
						if v13 == nil {
							if !in.IsDelim(']') {
								v13 = make([]string, 0, 4)
							} else {
								v13 = []string{}
							}
						} else {
							v13 = (v13)[:0]
						}
						for !in.IsDelim(']') {
							var v14 string
							v14 = string(in.String())
							v13 = append(v13, v14)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([][]string, 0, 2)
					} else {
						out.Bids = [][]string{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v15 []string
					if in.IsNull() {
						in.Skip()
						v15 = nil
					} else {
						in.Delim('[')
						if v15 == nil {
							if !in.IsDelim(']') {
								v15 = make([]string, 0, 4)
							} else {
								v15 = []string{}
							}
						} else {
							v15 = (v15)[:0]
						}
						for !in.IsDelim(']') {
							var v16 string
							v16 = string(in.String())
							v15 = append(v15, v16)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v15)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(out *jwriter.Writer, in FuturesInstrumentBookResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix[1:])
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Asks {
				if v17 > 0 {
					out.RawByte(',')
				}
				if v18 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v19, v20 := range v18 {
						if v19 > 0 {
							out.RawByte(',')
						}
						out.String(string(v20))
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v21, v22 := range in.Bids {
				if v21 > 0 {
					out.RawByte(',')
				}
				if v22 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v23, v24 := range v22 {
						if v23 > 0 {
							out.RawByte(',')
						}
						out.String(string(v24))
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentBookResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentBookResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentBookResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentBookResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(in *jlexer.Lexer, out *FuturesGetOrdersResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.Orders = nil
			} else {
				in.Delim('[')
				if out.Orders == nil {
					if !in.IsDelim(']') {
						out.Orders = make([]FuturesGetOrderResult, 0, 0)
					} else {
						out.Orders = []FuturesGetOrderResult{}
					}
				} else {
					out.Orders = (out.Orders)[:0]
				}
				for !in.IsDelim(']') {
					var v25 FuturesGetOrderResult
					(v25).UnmarshalEasyJSON(in)
					out.Orders = append(out.Orders, v25)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(out *jwriter.Writer, in FuturesGetOrdersResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix)
		if in.Orders == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v26, v27 := range in.Orders {
				if v26 > 0 {
					out.RawByte(',')
				}
				(v27).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesGetOrdersResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesGetOrdersResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesGetOrdersResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesGetOrdersResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(in *jlexer.Lexer, out *FuturesGetOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "size":
			out.Size = int64(in.Int64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "filled_qty":
			out.FilledQty = float64(in.Float64Str())
		case "fee":
			out.Fee = float64(in.Float64Str())
		case "order_id":
			out.OrderId = int64(in.Int64Str())
		case "price":
			out.Price = float64(in.Float64Str())
		case "price_avg":
			out.PriceAvg = float64(in.Float64Str())
		case "status":
			out.Status = int(in.IntStr())
		case "type":
			out.Type = int(in.IntStr())
		case "contract_val":
			out.ContractVal = float64(in.Float64Str())
		case "leverage":
			out.Leverage = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(out *jwriter.Writer, in FuturesGetOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Size))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"filled_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.FilledQty))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Fee))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OrderId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Price))
	}
	{
		const prefix string = ",\"price_avg\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.PriceAvg))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.IntStr(int(in.Status))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.IntStr(int(in.Type))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ContractVal))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Leverage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesGetOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesGetOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesGetOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesGetOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(in *jlexer.Lexer, out *FuturesFixedPositionHolding) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long_margin":
			out.LongMargin = float64(in.Float64Str())
		case "long_liqui_price":
			out.LongLiquiPrice = float64(in.Float64Str())
		case "long_pnl_ratio":
			out.LongPnlRatio = float64(in.Float64Str())
		case "long_leverage":
			out.LongLeverage = float64(in.Float64Str())
		case "short_margin":
			out.ShortMargin = float64(in.Float64Str())
		case "short_liqui_price":
			out.ShortLiquiPrice = float64(in.Float64Str())
		case "short_pnl_ratio":
			out.ShortPnlRatio = float64(in.Float64Str())
		case "short_leverage":
			out.ShortLeverage = float64(in.Float64Str())
		case "long_qty":
			out.LongQty = float64(in.Float64Str())
		case "long_avail_qty":
			out.LongAvailQty = float64(in.Float64Str())
		case "long_avg_cost":
			out.LongAvgCost = float64(in.Float64Str())
		case "long_settlement_price":
			out.LongSettlementPrice = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "short_qty":
			out.ShortQty = float64(in.Float64Str())
		case "short_avail_qty":
			out.ShortAvailQty = float64(in.Float64Str())
		case "short_avg_cost":
			out.ShortAvgCost = float64(in.Float64Str())
		case "short_settlement_price":
			out.ShortSettlementPrice = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(out *jwriter.Writer, in FuturesFixedPositionHolding) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long_margin\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.LongMargin))
	}
	{
		const prefix string = ",\"long_liqui_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongLiquiPrice))
	}
	{
		const prefix string = ",\"long_pnl_ratio\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongPnlRatio))
	}
	{
		const prefix string = ",\"long_leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongLeverage))
	}
	{
		const prefix string = ",\"short_margin\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortMargin))
	}
	{
		const prefix string = ",\"short_liqui_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortLiquiPrice))
	}
	{
		const prefix string = ",\"short_pnl_ratio\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortPnlRatio))
	}
	{
		const prefix string = ",\"short_leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortLeverage))
	}
	{
		const prefix string = ",\"long_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongQty))
	}
	{
		const prefix string = ",\"long_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvailQty))
	}
	{
		const prefix string = ",\"long_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvgCost))
	}
	{
		const prefix string = ",\"long_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongSettlementPrice))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"short_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortQty))
	}
	{
		const prefix string = ",\"short_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvailQty))
	}
	{
		const prefix string = ",\"short_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvgCost))
	}
	{
		const prefix string = ",\"short_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortSettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedPositionHolding) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedPositionHolding) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedPositionHolding) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedPositionHolding) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(in *jlexer.Lexer, out *FuturesFixedPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "holding":
			if in.IsNull() {
				in.Skip()
				out.FixedPosition = nil
			} else {
				in.Delim('[')
				if out.FixedPosition == nil {
					if !in.IsDelim(']') {
						out.FixedPosition = make([]FuturesFixedPositionHolding, 0, 0)
					} else {
						out.FixedPosition = []FuturesFixedPositionHolding{}
					}
				} else {
					out.FixedPosition = (out.FixedPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v28 FuturesFixedPositionHolding
					(v28).UnmarshalEasyJSON(in)
					out.FixedPosition = append(out.FixedPosition, v28)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(out *jwriter.Writer, in FuturesFixedPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"holding\":"
		out.RawString(prefix)
		if in.FixedPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v29, v30 := range in.FixedPosition {
				if v29 > 0 {
					out.RawByte(',')
				}
				(v30).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(in *jlexer.Lexer, out *FuturesFixedAccountInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "info":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Info = make(map[string]FuturesFixedAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v31 FuturesFixedAccount
					(v31).UnmarshalEasyJSON(in)
					(out.Info)[key] = v31
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(out *jwriter.Writer, in FuturesFixedAccountInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix)
		if in.Info == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v32First := true
			for v32Name, v32Value := range in.Info {
				if v32First {
					v32First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v32Name))
				out.RawByte(':')
				(v32Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedAccountInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedAccountInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedAccountInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedAccountInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(in *jlexer.Lexer, out *FuturesFixedAccountContracts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "available_qty":
			out.AvailableQty = float64(in.Float64Str())
		case "fixed_balance":
			out.FixedBalance = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "margin_fixed":
			out.MarginFixed = float64(in.Float64Str())
		case "margin_for_unfilled":
			out.MarginForUnfilled = float64(in.Float64Str())
		case "margin_frozen":
			out.MarginFrozen = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "unrealizedPnl":
			out.UnrealizedPnl = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(out *jwriter.Writer, in FuturesFixedAccountContracts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"available_qty\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.AvailableQty))
	}
	{
		const prefix string = ",\"fixed_balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.FixedBalance))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"margin_fixed\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginFixed))
	}
	{
		const prefix string = ",\"margin_for_unfilled\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginForUnfilled))
	}
	{
		const prefix string = ",\"margin_frozen\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginFrozen))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"unrealizedPnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.UnrealizedPnl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedAccountContracts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedAccountContracts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedAccountContracts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedAccountContracts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(in *jlexer.Lexer, out *FuturesFixedAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "equity":
			out.Equity = float64(in.Float64Str())
		case "total_avail_balance":
			out.TotalAvailBalance = float64(in.Float64Str())
		case "contracts":
			if in.IsNull() {
				in.Skip()
				out.Contracts = nil
			} else {
				in.Delim('[')
				if out.Contracts == nil {
					if !in.IsDelim(']') {
						out.Contracts = make([]FuturesFixedAccountContracts, 0, 0)
					} else {
						out.Contracts = []FuturesFixedAccountContracts{}
					}
				} else {
					out.Contracts = (out.Contracts)[:0]
				}
				for !in.IsDelim(']') {
					var v33 FuturesFixedAccountContracts
					(v33).UnmarshalEasyJSON(in)
					out.Contracts = append(out.Contracts, v33)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(out *jwriter.Writer, in FuturesFixedAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix[1:])
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Equity))
	}
	{
		const prefix string = ",\"total_avail_balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TotalAvailBalance))
	}
	{
		const prefix string = ",\"contracts\":"
		out.RawString(prefix)
		if in.Contracts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v34, v35 := range in.Contracts {
				if v34 > 0 {
					out.RawByte(',')
				}
				(v35).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(in *jlexer.Lexer, out *FuturesFillResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "trade_id":
			out.TradeId = int64(in.Int64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "price":
			out.Price = float64(in.Float64Str())
		case "order_qty":
			out.OrderQty = float64(in.Float64Str())
		case "order_id":
			out.OrderId = int64(in.Int64Str())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "exec_type":
			out.ExecType = string(in.String())
		case "fee":
			out.Fee = float64(in.Float64Str())
		case "side":
			out.Side = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(out *jwriter.Writer, in FuturesFillResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.TradeId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Price))
	}
	{
		const prefix string = ",\"order_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.OrderQty))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OrderId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"exec_type\":"
		out.RawString(prefix)
		out.String(string(in.ExecType))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Fee))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFillResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFillResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFillResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFillResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(in *jlexer.Lexer, out *FuturesCurrencyLedgerDetails) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.OrderId = int64(in.Int64())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(out *jwriter.Writer, in FuturesCurrencyLedgerDetails) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.OrderId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCurrencyLedgerDetails) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCurrencyLedgerDetails) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCurrencyLedgerDetails) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCurrencyLedgerDetails) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(in *jlexer.Lexer, out *FuturesCurrencyLedger) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ledger_id":
			out.LedgerId = int64(in.Int64Str())
		case "amount":
			out.Amount = float64(in.Float64Str())
		case "balance":
			out.Balance = float64(in.Float64Str())
		case "currency":
			out.Currency = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "details":
			(out.Details).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(out *jwriter.Writer, in FuturesCurrencyLedger) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ledger_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.LedgerId))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Amount))
	}
	{
		const prefix string = ",\"balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Balance))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"details\":"
		out.RawString(prefix)
		(in.Details).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCurrencyLedger) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCurrencyLedger) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCurrencyLedger) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCurrencyLedger) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(in *jlexer.Lexer, out *FuturesCurrencyAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "MarginMode":
			out.MarginMode = string(in.String())
		case "CrossAccount":
			(out.CrossAccount).UnmarshalEasyJSON(in)
		case "FixedAccount":
			(out.FixedAccount).UnmarshalEasyJSON(in)
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(out *jwriter.Writer, in FuturesCurrencyAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"MarginMode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"CrossAccount\":"
		out.RawString(prefix)
		(in.CrossAccount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"FixedAccount\":"
		out.RawString(prefix)
		(in.FixedAccount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCurrencyAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCurrencyAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCurrencyAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCurrencyAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(in *jlexer.Lexer, out *FuturesCrossPositionHolding) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "liquidation_price":
			out.LiquidationPrice = float64(in.Float64Str())
		case "leverage":
			out.Leverage = float64(in.Float64Str())
		case "long_qty":
			out.LongQty = float64(in.Float64Str())
		case "long_avail_qty":
			out.LongAvailQty = float64(in.Float64Str())
		case "long_avg_cost":
			out.LongAvgCost = float64(in.Float64Str())
		case "long_settlement_price":
			out.LongSettlementPrice = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "short_qty":
			out.ShortQty = float64(in.Float64Str())
		case "short_avail_qty":
			out.ShortAvailQty = float64(in.Float64Str())
		case "short_avg_cost":
			out.ShortAvgCost = float64(in.Float64Str())
		case "short_settlement_price":
			out.ShortSettlementPrice = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(out *jwriter.Writer, in FuturesCrossPositionHolding) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"liquidation_price\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.LiquidationPrice))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Leverage))
	}
	{
		const prefix string = ",\"long_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongQty))
	}
	{
		const prefix string = ",\"long_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvailQty))
	}
	{
		const prefix string = ",\"long_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvgCost))
	}
	{
		const prefix string = ",\"long_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongSettlementPrice))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"short_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortQty))
	}
	{
		const prefix string = ",\"short_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvailQty))
	}
	{
		const prefix string = ",\"short_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvgCost))
	}
	{
		const prefix string = ",\"short_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortSettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossPositionHolding) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossPositionHolding) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossPositionHolding) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossPositionHolding) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(in *jlexer.Lexer, out *FuturesCrossPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "holding":
			if in.IsNull() {
				in.Skip()
				out.CrossPosition = nil
			} else {
				in.Delim('[')
				if out.CrossPosition == nil {
					if !in.IsDelim(']') {
						out.CrossPosition = make([]FuturesCrossPositionHolding, 0, 0)
					} else {
						out.CrossPosition = []FuturesCrossPositionHolding{}
					}
				} else {
					out.CrossPosition = (out.CrossPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v36 FuturesCrossPositionHolding
					(v36).UnmarshalEasyJSON(in)
					out.CrossPosition = append(out.CrossPosition, v36)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(out *jwriter.Writer, in FuturesCrossPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"holding\":"
		out.RawString(prefix)
		if in.CrossPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v37, v38 := range in.CrossPosition {
				if v37 > 0 {
					out.RawByte(',')
				}
				(v38).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(in *jlexer.Lexer, out *FuturesCrossAccountInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "info":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Info = make(map[string]FuturesCrossAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v39 FuturesCrossAccount
					(v39).UnmarshalEasyJSON(in)
					(out.Info)[key] = v39
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(out *jwriter.Writer, in FuturesCrossAccountInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix)
		if in.Info == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v40First := true
			for v40Name, v40Value := range in.Info {
				if v40First {
					v40First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v40Name))
				out.RawByte(':')
				(v40Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossAccountInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossAccountInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossAccountInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossAccountInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(in *jlexer.Lexer, out *FuturesCrossAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "equity":
			out.Equity = float64(in.Float64Str())
		case "margin":
			out.Margin = float64(in.Float64Str())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "margin_ratio":
			out.MarginRatio = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "unrealized_pnl":
			out.UnrealizedPnl = float64(in.Float64Str())
		case "total_avail_balance":
			out.TotalAvailBalance = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(out *jwriter.Writer, in FuturesCrossAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.Equity))
	}
	{
		const prefix string = ",\"margin\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Margin))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"margin_ratio\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginRatio))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"unrealized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.UnrealizedPnl))
	}
	{
		const prefix string = ",\"total_avail_balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TotalAvailBalance))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(in *jlexer.Lexer, out *FuturesClosePositionResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "close_position_info":
			if in.IsNull() {
				in.Skip()
				out.ClosePositionInfo = nil
			} else {
				in.Delim('[')
				if out.ClosePositionInfo == nil {
					if !in.IsDelim(']') {
						out.ClosePositionInfo = make([]ClosePositionInfo, 0, 1)
					} else {
						out.ClosePositionInfo = []ClosePositionInfo{}
					}
				} else {
					out.ClosePositionInfo = (out.ClosePositionInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v41 ClosePositionInfo
					(v41).UnmarshalEasyJSON(in)
					out.ClosePositionInfo = append(out.ClosePositionInfo, v41)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(out *jwriter.Writer, in FuturesClosePositionResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"close_position_info\":"
		out.RawString(prefix)
		if in.ClosePositionInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v42, v43 := range in.ClosePositionInfo {
				if v42 > 0 {
					out.RawByte(',')
				}
				(v43).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesClosePositionResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesClosePositionResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesClosePositionResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesClosePositionResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(in *jlexer.Lexer, out *FuturesCancelInstrumentOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_id":
			out.OrderId = string(in.String())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(out *jwriter.Writer, in FuturesCancelInstrumentOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCancelInstrumentOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCancelInstrumentOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCancelInstrumentOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCancelInstrumentOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(in *jlexer.Lexer, out *FuturesBatchNewOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.OrderInfo = nil
			} else {
				in.Delim('[')
				if out.OrderInfo == nil {
					if !in.IsDelim(']') {
						out.OrderInfo = make([]OrderInfo, 0, 1)
					} else {
						out.OrderInfo = []OrderInfo{}
					}
				} else {
					out.OrderInfo = (out.OrderInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v44 OrderInfo
					(v44).UnmarshalEasyJSON(in)
					out.OrderInfo = append(out.OrderInfo, v44)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(out *jwriter.Writer, in FuturesBatchNewOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix)
		if in.OrderInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v45, v46 := range in.OrderInfo {
				if v45 > 0 {
					out.RawByte(',')
				}
				(v46).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesBatchNewOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesBatchNewOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesBatchNewOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesBatchNewOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(in *jlexer.Lexer, out *FuturesBatchCancelInstrumentOrdersResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_ids":
			if in.IsNull() {
				in.Skip()
				out.OrderIds = nil
			} else {
				in.Delim('[')
				if out.OrderIds == nil {
					if !in.IsDelim(']') {
						out.OrderIds = make([]string, 0, 4)
					} else {
						out.OrderIds = []string{}
					}
				} else {
					out.OrderIds = (out.OrderIds)[:0]
				}
				for !in.IsDelim(']') {
					var v47 string
					v47 = string(in.String())
					out.OrderIds = append(out.OrderIds, v47)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(out *jwriter.Writer, in FuturesBatchCancelInstrumentOrdersResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_ids\":"
		out.RawString(prefix)
		if in.OrderIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v48, v49 := range in.OrderIds {
				if v48 > 0 {
					out.RawByte(',')
				}
				out.String(string(v49))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesBatchCancelInstrumentOrdersResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesBatchCancelInstrumentOrdersResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesBatchCancelInstrumentOrdersResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesBatchCancelInstrumentOrdersResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(in *jlexer.Lexer, out *FuturesAccountsHolds) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "amount":
			out.Amount = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(out *jwriter.Writer, in FuturesAccountsHolds) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Amount))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesAccountsHolds) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesAccountsHolds) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesAccountsHolds) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesAccountsHolds) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(in *jlexer.Lexer, out *FuturesAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "MarginMode":
			out.MarginMode = string(in.String())
		case "CrossAccount":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.CrossAccount = make(map[string]FuturesCrossAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v50 FuturesCrossAccount
					(v50).UnmarshalEasyJSON(in)
					(out.CrossAccount)[key] = v50
					in.WantComma()
				}
				in.Delim('}')
			}
		case "FixedAccount":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.FixedAccount = make(map[string]FuturesFixedAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v51 FuturesFixedAccount
					(v51).UnmarshalEasyJSON(in)
					(out.FixedAccount)[key] = v51
					in.WantComma()
				}
				in.Delim('}')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(out *jwriter.Writer, in FuturesAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"MarginMode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"CrossAccount\":"
		out.RawString(prefix)
		if in.CrossAccount == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v52First := true
			for v52Name, v52Value := range in.CrossAccount {
				if v52First {
					v52First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v52Name))
				out.RawByte(':')
				(v52Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"FixedAccount\":"
		out.RawString(prefix)
		if in.FixedAccount == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v53First := true
			for v53Name, v53Value := range in.FixedAccount {
				if v53First {
					v53First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v53Name))
				out.RawByte(':')
				(v53Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(in *jlexer.Lexer, out *ExchangeRate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "rate":
			out.Rate = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(out *jwriter.Writer, in ExchangeRate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"rate\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Rate))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ExchangeRate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ExchangeRate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ExchangeRate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ExchangeRate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(in *jlexer.Lexer, out *CodeMessage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error_code":
			out.ErrorCode = int64(in.Int64())
		case "error_message":
			out.ErrorMessage = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(out *jwriter.Writer, in CodeMessage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ErrorCode))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CodeMessage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CodeMessage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CodeMessage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CodeMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(in *jlexer.Lexer, out *ClosePositionInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "error_code":
			out.ErrorCode = int64(in.Int64())
		case "error_message":
			out.ErrorMessage = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(out *jwriter.Writer, in ClosePositionInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.Int64(int64(in.ErrorCode))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ClosePositionInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ClosePositionInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ClosePositionInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ClosePositionInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(l, v)
}
func easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(in *jlexer.Lexer, out *BizWarmTips) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(out *jwriter.Writer, in BizWarmTips) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BizWarmTips) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BizWarmTips) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson7dbe2c91EncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BizWarmTips) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BizWarmTips) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson7dbe2c91DecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(l, v)
}
