// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package okex

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	decimal "github.com/shopspring/decimal"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(in *jlexer.Lexer, out *WithdrawalFeesListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(out *jwriter.Writer, in WithdrawalFeesListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WithdrawalFeesListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WithdrawalFeesListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WithdrawalFeesListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WithdrawalFeesListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(in *jlexer.Lexer, out *WithdrawalFeesList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(WithdrawalFeesList, 0, 8)
			} else {
				*out = WithdrawalFeesList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 *WithdrawalFee
			if in.IsNull() {
				in.Skip()
				v1 = nil
			} else {
				if v1 == nil {
					v1 = new(WithdrawalFee)
				}
				(*v1).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(out *jwriter.Writer, in WithdrawalFeesList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			if v3 == nil {
				out.RawString("null")
			} else {
				(*v3).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v WithdrawalFeesList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WithdrawalFeesList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WithdrawalFeesList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WithdrawalFeesList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(in *jlexer.Lexer, out *WithdrawalFee) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ccy":
			out.Currency = string(in.String())
		case "minWd":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinWithdrawal).UnmarshalJSON(data))
			}
		case "maxFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MaxFee).UnmarshalJSON(data))
			}
		case "minFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinFee).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(out *jwriter.Writer, in WithdrawalFee) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ccy\":"
		out.RawString(prefix[1:])
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"minWd\":"
		out.RawString(prefix)
		out.Raw((in.MinWithdrawal).MarshalJSON())
	}
	{
		const prefix string = ",\"maxFee\":"
		out.RawString(prefix)
		out.Raw((in.MaxFee).MarshalJSON())
	}
	{
		const prefix string = ",\"minFee\":"
		out.RawString(prefix)
		out.Raw((in.MinFee).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WithdrawalFee) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WithdrawalFee) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WithdrawalFee) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WithdrawalFee) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(in *jlexer.Lexer, out *WSEvent) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "action":
			out.Action = WSEventAction(in.String())
		case "data":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Data).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(out *jwriter.Writer, in WSEvent) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		out.Raw((in.Data).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSEvent) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSEvent) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSEvent) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSEvent) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(in *jlexer.Lexer, out *UserSpotAccountWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(out *jwriter.Writer, in UserSpotAccountWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserSpotAccountWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserSpotAccountWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserSpotAccountWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserSpotAccountWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(in *jlexer.Lexer, out *UserOrdersWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*OrderUpdateWS, 0, 8)
					} else {
						out.Data = []*OrderUpdateWS{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *OrderUpdateWS
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(OrderUpdateWS)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(out *jwriter.Writer, in UserOrdersWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Data {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserOrdersWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserOrdersWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserOrdersWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserOrdersWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(in *jlexer.Lexer, out *TradeFeeListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*TradeFee, 0, 8)
					} else {
						out.Data = []*TradeFee{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *TradeFee
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(TradeFee)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(out *jwriter.Writer, in TradeFeeListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Data {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TradeFeeListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TradeFeeListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TradeFeeListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TradeFeeListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(in *jlexer.Lexer, out *TradeFee) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "maker":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Maker).UnmarshalJSON(data))
			}
		case "taker":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Taker).UnmarshalJSON(data))
			}
		case "ts":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(out *jwriter.Writer, in TradeFee) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"maker\":"
		out.RawString(prefix[1:])
		out.Raw((in.Maker).MarshalJSON())
	}
	{
		const prefix string = ",\"taker\":"
		out.RawString(prefix)
		out.Raw((in.Taker).MarshalJSON())
	}
	{
		const prefix string = ",\"ts\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TradeFee) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TradeFee) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TradeFee) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TradeFee) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(in *jlexer.Lexer, out *SpotOrderResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ordId":
			out.OrderID = string(in.String())
		case "clOrdId":
			out.ClientOrderID = string(in.String())
		case "sCode":
			out.SCode = string(in.String())
		case "sMsg":
			out.SMsg = string(in.String())
		case "tag":
			out.Tag = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(out *jwriter.Writer, in SpotOrderResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ordId\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderID))
	}
	{
		const prefix string = ",\"clOrdId\":"
		out.RawString(prefix)
		out.String(string(in.ClientOrderID))
	}
	{
		const prefix string = ",\"sCode\":"
		out.RawString(prefix)
		out.String(string(in.SCode))
	}
	{
		const prefix string = ",\"sMsg\":"
		out.RawString(prefix)
		out.String(string(in.SMsg))
	}
	{
		const prefix string = ",\"tag\":"
		out.RawString(prefix)
		out.String(string(in.Tag))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotOrderResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotOrderResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotOrderResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotOrderResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(in *jlexer.Lexer, out *SpotNewOrderResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*SpotOrderResponse, 0, 8)
					} else {
						out.Data = []*SpotOrderResponse{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v10 *SpotOrderResponse
					if in.IsNull() {
						in.Skip()
						v10 = nil
					} else {
						if v10 == nil {
							v10 = new(SpotOrderResponse)
						}
						(*v10).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(out *jwriter.Writer, in SpotNewOrderResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Data {
				if v11 > 0 {
					out.RawByte(',')
				}
				if v12 == nil {
					out.RawString("null")
				} else {
					(*v12).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotNewOrderResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotNewOrderResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotNewOrderResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotNewOrderResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(in *jlexer.Lexer, out *SpotInstrumentsTickerListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(out *jwriter.Writer, in SpotInstrumentsTickerListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsTickerListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsTickerListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsTickerListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsTickerListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(in *jlexer.Lexer, out *SpotInstrumentsTickerList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SpotInstrumentsTickerList, 0, 8)
			} else {
				*out = SpotInstrumentsTickerList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v13 *SpotInstrumentTicker
			if in.IsNull() {
				in.Skip()
				v13 = nil
			} else {
				if v13 == nil {
					v13 = new(SpotInstrumentTicker)
				}
				(*v13).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v13)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(out *jwriter.Writer, in SpotInstrumentsTickerList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v14, v15 := range in {
			if v14 > 0 {
				out.RawByte(',')
			}
			if v15 == nil {
				out.RawString("null")
			} else {
				(*v15).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsTickerList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsTickerList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsTickerList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsTickerList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(in *jlexer.Lexer, out *SpotInstrumentsListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(out *jwriter.Writer, in SpotInstrumentsListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(in *jlexer.Lexer, out *SpotInstrumentsList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SpotInstrumentsList, 0, 8)
			} else {
				*out = SpotInstrumentsList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v16 *SpotInstrument
			if in.IsNull() {
				in.Skip()
				v16 = nil
			} else {
				if v16 == nil {
					v16 = new(SpotInstrument)
				}
				(*v16).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v16)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(out *jwriter.Writer, in SpotInstrumentsList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v17, v18 := range in {
			if v17 > 0 {
				out.RawByte(',')
			}
			if v18 == nil {
				out.RawString("null")
			} else {
				(*v18).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(in *jlexer.Lexer, out *SpotInstrumentTicker) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "askPx":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestAsk).UnmarshalJSON(data))
			}
		case "bidPx":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestBid).UnmarshalJSON(data))
			}
		case "askSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestAskSize).UnmarshalJSON(data))
			}
		case "bidSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestBidSize).UnmarshalJSON(data))
			}
		case "vol24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BaseVolume24h).UnmarshalJSON(data))
			}
		case "volCcy24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.QuoteVolume24h).UnmarshalJSON(data))
			}
		case "high24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.High24h).UnmarshalJSON(data))
			}
		case "low24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Low24h).UnmarshalJSON(data))
			}
		case "open24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Open24h).UnmarshalJSON(data))
			}
		case "last":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Last).UnmarshalJSON(data))
			}
		case "lastSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastQty).UnmarshalJSON(data))
			}
		case "ts":
			out.Timestamp = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "instType":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(out *jwriter.Writer, in SpotInstrumentTicker) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"askPx\":"
		out.RawString(prefix[1:])
		out.Raw((in.BestAsk).MarshalJSON())
	}
	{
		const prefix string = ",\"bidPx\":"
		out.RawString(prefix)
		out.Raw((in.BestBid).MarshalJSON())
	}
	{
		const prefix string = ",\"askSz\":"
		out.RawString(prefix)
		out.Raw((in.BestAskSize).MarshalJSON())
	}
	{
		const prefix string = ",\"bidSz\":"
		out.RawString(prefix)
		out.Raw((in.BestBidSize).MarshalJSON())
	}
	{
		const prefix string = ",\"vol24h\":"
		out.RawString(prefix)
		out.Raw((in.BaseVolume24h).MarshalJSON())
	}
	{
		const prefix string = ",\"volCcy24h\":"
		out.RawString(prefix)
		out.Raw((in.QuoteVolume24h).MarshalJSON())
	}
	{
		const prefix string = ",\"high24h\":"
		out.RawString(prefix)
		out.Raw((in.High24h).MarshalJSON())
	}
	{
		const prefix string = ",\"low24h\":"
		out.RawString(prefix)
		out.Raw((in.Low24h).MarshalJSON())
	}
	{
		const prefix string = ",\"open24h\":"
		out.RawString(prefix)
		out.Raw((in.Open24h).MarshalJSON())
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.Raw((in.Last).MarshalJSON())
	}
	{
		const prefix string = ",\"lastSz\":"
		out.RawString(prefix)
		out.Raw((in.LastQty).MarshalJSON())
	}
	{
		const prefix string = ",\"ts\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"instType\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentTicker) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentTicker) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentTicker) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentTicker) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(in *jlexer.Lexer, out *SpotInstrument) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCcy":
			out.BaseCurrency = string(in.String())
		case "quoteCcy":
			out.QuoteCurrency = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "minSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinSize).UnmarshalJSON(data))
			}
		case "lotSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.SizeIncrement).UnmarshalJSON(data))
			}
		case "tickSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.TickSize).UnmarshalJSON(data))
			}
		case "state":
			out.State = StateStatus(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(out *jwriter.Writer, in SpotInstrument) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCcy\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"quoteCcy\":"
		out.RawString(prefix)
		out.String(string(in.QuoteCurrency))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"minSz\":"
		out.RawString(prefix)
		out.Raw((in.MinSize).MarshalJSON())
	}
	{
		const prefix string = ",\"lotSz\":"
		out.RawString(prefix)
		out.Raw((in.SizeIncrement).MarshalJSON())
	}
	{
		const prefix string = ",\"tickSz\":"
		out.RawString(prefix)
		out.Raw((in.TickSize).MarshalJSON())
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.State))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrument) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrument) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrument) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrument) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(in *jlexer.Lexer, out *SpotCancelOrderResponseWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*SpotOrderResponse, 0, 8)
					} else {
						out.Data = []*SpotOrderResponse{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v19 *SpotOrderResponse
					if in.IsNull() {
						in.Skip()
						v19 = nil
					} else {
						if v19 == nil {
							v19 = new(SpotOrderResponse)
						}
						(*v19).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(out *jwriter.Writer, in SpotCancelOrderResponseWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.Data {
				if v20 > 0 {
					out.RawByte(',')
				}
				if v21 == nil {
					out.RawString("null")
				} else {
					(*v21).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotCancelOrderResponseWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotCancelOrderResponseWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotCancelOrderResponseWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotCancelOrderResponseWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(in *jlexer.Lexer, out *SpotAccountBalancesListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(out *jwriter.Writer, in SpotAccountBalancesListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotAccountBalancesListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotAccountBalancesListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotAccountBalancesListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotAccountBalancesListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(in *jlexer.Lexer, out *SpotAccountBalancesList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SpotAccountBalancesList, 0, 8)
			} else {
				*out = SpotAccountBalancesList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v22 *SpotAccountBalance
			if in.IsNull() {
				in.Skip()
				v22 = nil
			} else {
				if v22 == nil {
					v22 = new(SpotAccountBalance)
				}
				(*v22).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v22)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(out *jwriter.Writer, in SpotAccountBalancesList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v23, v24 := range in {
			if v23 > 0 {
				out.RawByte(',')
			}
			if v24 == nil {
				out.RawString("null")
			} else {
				(*v24).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SpotAccountBalancesList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotAccountBalancesList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotAccountBalancesList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotAccountBalancesList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(in *jlexer.Lexer, out *SpotAccountBalance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "frozenBal":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Frozen).UnmarshalJSON(data))
			}
		case "ccy":
			out.Currency = string(in.String())
		case "bal":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Balance).UnmarshalJSON(data))
			}
		case "availBal":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Available).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(out *jwriter.Writer, in SpotAccountBalance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"frozenBal\":"
		out.RawString(prefix[1:])
		out.Raw((in.Frozen).MarshalJSON())
	}
	{
		const prefix string = ",\"ccy\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"bal\":"
		out.RawString(prefix)
		out.Raw((in.Balance).MarshalJSON())
	}
	{
		const prefix string = ",\"availBal\":"
		out.RawString(prefix)
		out.Raw((in.Available).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotAccountBalance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotAccountBalance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotAccountBalance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotAccountBalance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(in *jlexer.Lexer, out *OrdersListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(out *jwriter.Writer, in OrdersListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrdersListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrdersListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrdersListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrdersListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(in *jlexer.Lexer, out *OrdersList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(OrdersList, 0, 8)
			} else {
				*out = OrdersList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v25 *Order
			if in.IsNull() {
				in.Skip()
				v25 = nil
			} else {
				if v25 == nil {
					v25 = new(Order)
				}
				(*v25).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v25)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(out *jwriter.Writer, in OrdersList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v26, v27 := range in {
			if v26 > 0 {
				out.RawByte(',')
			}
			if v27 == nil {
				out.RawString("null")
			} else {
				(*v27).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v OrdersList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrdersList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrdersList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrdersList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(in *jlexer.Lexer, out *OrderUpdateWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Order = new(Order)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "last_fill_px":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastFillPrice).UnmarshalJSON(data))
			}
		case "last_fill_qty":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastFillQty).UnmarshalJSON(data))
			}
		case "last_fill_id":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastFillTradeID).UnmarshalJSON(data))
			}
		case "last_fill_time":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastFillTime).UnmarshalJSON(data))
			}
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		case "ordId":
			out.OrderID = string(in.String())
		case "clOrdId":
			out.ClientOrderID = string(in.String())
		case "cTime":
			out.Timestamp = string(in.String())
		case "px":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Price).UnmarshalJSON(data))
			}
		case "avgPx":
			out.PriceAvgStr = string(in.String())
		case "PriceAvg":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.PriceAvg).UnmarshalJSON(data))
			}
		case "sz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Quantity).UnmarshalJSON(data))
			}
		case "accFillSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.QuantityFilled).UnmarshalJSON(data))
			}
		case "Total":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Total).UnmarshalJSON(data))
			}
		case "pnl":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ProfitAndLoss).UnmarshalJSON(data))
			}
		case "fee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Fee).UnmarshalJSON(data))
			}
		case "feeCcy":
			out.FeeCurrency = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "tag":
			out.Tag = string(in.String())
		case "posSide":
			out.PosSide = string(in.String())
		case "ordType":
			out.Type = OrderType(in.String())
		case "side":
			out.Side = OrderSide(in.String())
		case "state":
			out.Status = OrderStatus(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(out *jwriter.Writer, in OrderUpdateWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"last_fill_px\":"
		out.RawString(prefix[1:])
		out.Raw((in.LastFillPrice).MarshalJSON())
	}
	{
		const prefix string = ",\"last_fill_qty\":"
		out.RawString(prefix)
		out.Raw((in.LastFillQty).MarshalJSON())
	}
	{
		const prefix string = ",\"last_fill_id\":"
		out.RawString(prefix)
		out.Raw((in.LastFillTradeID).MarshalJSON())
	}
	{
		const prefix string = ",\"last_fill_time\":"
		out.RawString(prefix)
		out.Raw((in.LastFillTime).MarshalJSON())
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"ordId\":"
		out.RawString(prefix)
		out.String(string(in.OrderID))
	}
	{
		const prefix string = ",\"clOrdId\":"
		out.RawString(prefix)
		out.String(string(in.ClientOrderID))
	}
	{
		const prefix string = ",\"cTime\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"px\":"
		out.RawString(prefix)
		out.Raw((in.Price).MarshalJSON())
	}
	{
		const prefix string = ",\"avgPx\":"
		out.RawString(prefix)
		out.String(string(in.PriceAvgStr))
	}
	{
		const prefix string = ",\"PriceAvg\":"
		out.RawString(prefix)
		out.Raw((in.PriceAvg).MarshalJSON())
	}
	{
		const prefix string = ",\"sz\":"
		out.RawString(prefix)
		out.Raw((in.Quantity).MarshalJSON())
	}
	{
		const prefix string = ",\"accFillSz\":"
		out.RawString(prefix)
		out.Raw((in.QuantityFilled).MarshalJSON())
	}
	{
		const prefix string = ",\"Total\":"
		out.RawString(prefix)
		out.Raw((in.Total).MarshalJSON())
	}
	{
		const prefix string = ",\"pnl\":"
		out.RawString(prefix)
		out.Raw((in.ProfitAndLoss).MarshalJSON())
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Raw((in.Fee).MarshalJSON())
	}
	{
		const prefix string = ",\"feeCcy\":"
		out.RawString(prefix)
		out.String(string(in.FeeCurrency))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"tag\":"
		out.RawString(prefix)
		out.String(string(in.Tag))
	}
	{
		const prefix string = ",\"posSide\":"
		out.RawString(prefix)
		out.String(string(in.PosSide))
	}
	{
		const prefix string = ",\"ordType\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrderUpdateWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrderUpdateWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrderUpdateWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrderUpdateWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(in *jlexer.Lexer, out *Order) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ordId":
			out.OrderID = string(in.String())
		case "clOrdId":
			out.ClientOrderID = string(in.String())
		case "cTime":
			out.Timestamp = string(in.String())
		case "px":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Price).UnmarshalJSON(data))
			}
		case "avgPx":
			out.PriceAvgStr = string(in.String())
		case "PriceAvg":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.PriceAvg).UnmarshalJSON(data))
			}
		case "sz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Quantity).UnmarshalJSON(data))
			}
		case "accFillSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.QuantityFilled).UnmarshalJSON(data))
			}
		case "Total":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Total).UnmarshalJSON(data))
			}
		case "pnl":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ProfitAndLoss).UnmarshalJSON(data))
			}
		case "fee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Fee).UnmarshalJSON(data))
			}
		case "feeCcy":
			out.FeeCurrency = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "tag":
			out.Tag = string(in.String())
		case "posSide":
			out.PosSide = string(in.String())
		case "ordType":
			out.Type = OrderType(in.String())
		case "side":
			out.Side = OrderSide(in.String())
		case "state":
			out.Status = OrderStatus(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(out *jwriter.Writer, in Order) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ordId\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderID))
	}
	{
		const prefix string = ",\"clOrdId\":"
		out.RawString(prefix)
		out.String(string(in.ClientOrderID))
	}
	{
		const prefix string = ",\"cTime\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"px\":"
		out.RawString(prefix)
		out.Raw((in.Price).MarshalJSON())
	}
	{
		const prefix string = ",\"avgPx\":"
		out.RawString(prefix)
		out.String(string(in.PriceAvgStr))
	}
	{
		const prefix string = ",\"PriceAvg\":"
		out.RawString(prefix)
		out.Raw((in.PriceAvg).MarshalJSON())
	}
	{
		const prefix string = ",\"sz\":"
		out.RawString(prefix)
		out.Raw((in.Quantity).MarshalJSON())
	}
	{
		const prefix string = ",\"accFillSz\":"
		out.RawString(prefix)
		out.Raw((in.QuantityFilled).MarshalJSON())
	}
	{
		const prefix string = ",\"Total\":"
		out.RawString(prefix)
		out.Raw((in.Total).MarshalJSON())
	}
	{
		const prefix string = ",\"pnl\":"
		out.RawString(prefix)
		out.Raw((in.ProfitAndLoss).MarshalJSON())
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Raw((in.Fee).MarshalJSON())
	}
	{
		const prefix string = ",\"feeCcy\":"
		out.RawString(prefix)
		out.String(string(in.FeeCurrency))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"tag\":"
		out.RawString(prefix)
		out.String(string(in.Tag))
	}
	{
		const prefix string = ",\"posSide\":"
		out.RawString(prefix)
		out.String(string(in.PosSide))
	}
	{
		const prefix string = ",\"ordType\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Order) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Order) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Order) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Order) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(in *jlexer.Lexer, out *Depth400UpdateWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "action":
			out.Action = WSEventAction(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Depth400Data, 0, 8)
					} else {
						out.Data = []*Depth400Data{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v28 *Depth400Data
					if in.IsNull() {
						in.Skip()
						v28 = nil
					} else {
						if v28 == nil {
							v28 = new(Depth400Data)
						}
						(*v28).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v28)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(out *jwriter.Writer, in Depth400UpdateWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v29, v30 := range in.Data {
				if v29 > 0 {
					out.RawByte(',')
				}
				if v30 == nil {
					out.RawString("null")
				} else {
					(*v30).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Depth400UpdateWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Depth400UpdateWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Depth400UpdateWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Depth400UpdateWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(in *jlexer.Lexer, out *Depth400PartialWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "action":
			out.Action = WSEventAction(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Depth400Data, 0, 8)
					} else {
						out.Data = []*Depth400Data{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v31 *Depth400Data
					if in.IsNull() {
						in.Skip()
						v31 = nil
					} else {
						if v31 == nil {
							v31 = new(Depth400Data)
						}
						(*v31).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v31)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(out *jwriter.Writer, in Depth400PartialWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v32, v33 := range in.Data {
				if v32 > 0 {
					out.RawByte(',')
				}
				if v33 == nil {
					out.RawString("null")
				} else {
					(*v33).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Depth400PartialWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Depth400PartialWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Depth400PartialWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Depth400PartialWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(in *jlexer.Lexer, out *Depth400Data) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.Pair = string(in.String())
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([][3]decimal.Decimal, 0, 1)
					} else {
						out.Asks = [][3]decimal.Decimal{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v34 [3]decimal.Decimal
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('[')
						v35 := 0
						for !in.IsDelim(']') {
							if v35 < 3 {
								if data := in.Raw(); in.Ok() {
									in.AddError(((v34)[v35]).UnmarshalJSON(data))
								}
								v35++
							} else {
								in.SkipRecursive()
							}
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v34)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([][3]decimal.Decimal, 0, 1)
					} else {
						out.Bids = [][3]decimal.Decimal{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v36 [3]decimal.Decimal
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('[')
						v37 := 0
						for !in.IsDelim(']') {
							if v37 < 3 {
								if data := in.Raw(); in.Ok() {
									in.AddError(((v36)[v37]).UnmarshalJSON(data))
								}
								v37++
							} else {
								in.SkipRecursive()
							}
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v36)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "timestamp":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Timestamp).UnmarshalJSON(data))
			}
		case "checksum":
			out.Checksum = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(out *jwriter.Writer, in Depth400Data) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix)
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v38, v39 := range in.Asks {
				if v38 > 0 {
					out.RawByte(',')
				}
				out.RawByte('[')
				for v40 := range v39 {
					if v40 > 0 {
						out.RawByte(',')
					}
					out.Raw(((v39)[v40]).MarshalJSON())
				}
				out.RawByte(']')
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v41, v42 := range in.Bids {
				if v41 > 0 {
					out.RawByte(',')
				}
				out.RawByte('[')
				for v43 := range v42 {
					if v43 > 0 {
						out.RawByte(',')
					}
					out.Raw(((v42)[v43]).MarshalJSON())
				}
				out.RawByte(']')
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.Raw((in.Timestamp).MarshalJSON())
	}
	{
		const prefix string = ",\"checksum\":"
		out.RawString(prefix)
		out.Int64(int64(in.Checksum))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Depth400Data) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Depth400Data) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Depth400Data) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Depth400Data) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(in *jlexer.Lexer, out *AccountCurrency) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "canDep":
			out.CanDeposit = bool(in.Bool())
		case "canWd":
			out.CanWithdraw = bool(in.Bool())
		case "canInternal":
			out.CanInternal = bool(in.Bool())
		case "ccy":
			out.Currency = string(in.String())
		case "name":
			out.FullName = string(in.String())
		case "minWd":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinWithdrawal).UnmarshalJSON(data))
			}
		case "maxFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MaxFee).UnmarshalJSON(data))
			}
		case "minFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinFee).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(out *jwriter.Writer, in AccountCurrency) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"canDep\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.CanDeposit))
	}
	{
		const prefix string = ",\"canWd\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanWithdraw))
	}
	{
		const prefix string = ",\"canInternal\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanInternal))
	}
	{
		const prefix string = ",\"ccy\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"minWd\":"
		out.RawString(prefix)
		out.Raw((in.MinWithdrawal).MarshalJSON())
	}
	{
		const prefix string = ",\"maxFee\":"
		out.RawString(prefix)
		out.Raw((in.MaxFee).MarshalJSON())
	}
	{
		const prefix string = ",\"minFee\":"
		out.RawString(prefix)
		out.Raw((in.MinFee).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AccountCurrency) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AccountCurrency) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AccountCurrency) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AccountCurrency) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(in *jlexer.Lexer, out *AccountCurrenciesListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(out *jwriter.Writer, in AccountCurrenciesListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AccountCurrenciesListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AccountCurrenciesListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AccountCurrenciesListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AccountCurrenciesListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(l, v)
}
func easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(in *jlexer.Lexer, out *AccountCurrenciesList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AccountCurrenciesList, 0, 8)
			} else {
				*out = AccountCurrenciesList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v44 *AccountCurrency
			if in.IsNull() {
				in.Skip()
				v44 = nil
			} else {
				if v44 == nil {
					v44 = new(AccountCurrency)
				}
				(*v44).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v44)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(out *jwriter.Writer, in AccountCurrenciesList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v45, v46 := range in {
			if v45 > 0 {
				out.RawByte(',')
			}
			if v46 == nil {
				out.RawString("null")
			} else {
				(*v46).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AccountCurrenciesList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AccountCurrenciesList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson490fdbeeEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AccountCurrenciesList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AccountCurrenciesList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson490fdbeeDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(l, v)
}
