// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package okex

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	decimal "github.com/shopspring/decimal"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(in *jlexer.Lexer, out *WithdrawalFeesListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(out *jwriter.Writer, in WithdrawalFeesListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WithdrawalFeesListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WithdrawalFeesListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WithdrawalFeesListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WithdrawalFeesListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(in *jlexer.Lexer, out *WithdrawalFeesList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(WithdrawalFeesList, 0, 8)
			} else {
				*out = WithdrawalFeesList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 *WithdrawalFee
			if in.IsNull() {
				in.Skip()
				v1 = nil
			} else {
				if v1 == nil {
					v1 = new(WithdrawalFee)
				}
				(*v1).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(out *jwriter.Writer, in WithdrawalFeesList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			if v3 == nil {
				out.RawString("null")
			} else {
				(*v3).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v WithdrawalFeesList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WithdrawalFeesList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WithdrawalFeesList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WithdrawalFeesList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi1(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(in *jlexer.Lexer, out *WithdrawalFee) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ccy":
			out.Currency = string(in.String())
		case "minWd":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinWithdrawal).UnmarshalJSON(data))
			}
		case "maxFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MaxFee).UnmarshalJSON(data))
			}
		case "minFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinFee).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(out *jwriter.Writer, in WithdrawalFee) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ccy\":"
		out.RawString(prefix[1:])
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"minWd\":"
		out.RawString(prefix)
		out.Raw((in.MinWithdrawal).MarshalJSON())
	}
	{
		const prefix string = ",\"maxFee\":"
		out.RawString(prefix)
		out.Raw((in.MaxFee).MarshalJSON())
	}
	{
		const prefix string = ",\"minFee\":"
		out.RawString(prefix)
		out.Raw((in.MinFee).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WithdrawalFee) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WithdrawalFee) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WithdrawalFee) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WithdrawalFee) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi2(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(in *jlexer.Lexer, out *WSTableResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(BaseOpSubscriptionArgs)
				}
				(*out.Arg).UnmarshalEasyJSON(in)
			}
		case "action":
			out.Action = string(in.String())
		case "data":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Data).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(out *jwriter.Writer, in WSTableResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil {
			out.RawString("null")
		} else {
			(*in.Arg).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		out.Raw((in.Data).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSTableResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSTableResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSTableResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSTableResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi3(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(in *jlexer.Lexer, out *WSHotDepths) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Table":
			out.Table = string(in.String())
		case "DepthMap":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.DepthMap = make(map[string]*WSDepthItem)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v4 *WSDepthItem
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(WSDepthItem)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					(out.DepthMap)[key] = v4
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(out *jwriter.Writer, in WSHotDepths) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"DepthMap\":"
		out.RawString(prefix)
		if in.DepthMap == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v5First := true
			for v5Name, v5Value := range in.DepthMap {
				if v5First {
					v5First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v5Name))
				out.RawByte(':')
				if v5Value == nil {
					out.RawString("null")
				} else {
					(*v5Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSHotDepths) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSHotDepths) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSHotDepths) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSHotDepths) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi4(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(in *jlexer.Lexer, out *WSEventResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "event":
			out.Event = string(in.String())
		case "Success":
			out.Success = string(in.String())
		case "channel":
			out.Channel = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(out *jwriter.Writer, in WSEventResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"event\":"
		out.RawString(prefix[1:])
		out.String(string(in.Event))
	}
	{
		const prefix string = ",\"Success\":"
		out.RawString(prefix)
		out.String(string(in.Success))
	}
	{
		const prefix string = ",\"channel\":"
		out.RawString(prefix)
		out.String(string(in.Channel))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSEventResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSEventResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSEventResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSEventResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi5(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(in *jlexer.Lexer, out *WSEvent) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "action":
			out.Action = WSEventAction(in.String())
		case "data":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Data).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(out *jwriter.Writer, in WSEvent) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		out.Raw((in.Data).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSEvent) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSEvent) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSEvent) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSEvent) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi6(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(in *jlexer.Lexer, out *WSErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "event":
			out.Event = string(in.String())
		case "message":
			out.Message = string(in.String())
		case "errorCode":
			out.ErrorCode = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(out *jwriter.Writer, in WSErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"event\":"
		out.RawString(prefix[1:])
		out.String(string(in.Event))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"errorCode\":"
		out.RawString(prefix)
		out.Int(int(in.ErrorCode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi7(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(in *jlexer.Lexer, out *WSDepthTableResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(BaseOpSubscriptionArgs)
				}
				(*out.Arg).UnmarshalEasyJSON(in)
			}
		case "action":
			out.Action = string(in.String())
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(out *jwriter.Writer, in WSDepthTableResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil {
			out.RawString("null")
		} else {
			(*in.Arg).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSDepthTableResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSDepthTableResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSDepthTableResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSDepthTableResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi8(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(in *jlexer.Lexer, out *WSDepthItemList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(WSDepthItemList, 0, 8)
			} else {
				*out = WSDepthItemList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v6 *WSDepthItem
			if in.IsNull() {
				in.Skip()
				v6 = nil
			} else {
				if v6 == nil {
					v6 = new(WSDepthItem)
				}
				(*v6).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v6)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(out *jwriter.Writer, in WSDepthItemList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v7, v8 := range in {
			if v7 > 0 {
				out.RawByte(',')
			}
			if v8 == nil {
				out.RawString("null")
			} else {
				(*v8).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v WSDepthItemList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSDepthItemList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSDepthItemList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSDepthItemList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi9(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(in *jlexer.Lexer, out *WSDepthItem) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([][3]decimal.Decimal, 0, 1)
					} else {
						out.Asks = [][3]decimal.Decimal{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v9 [3]decimal.Decimal
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('[')
						v10 := 0
						for !in.IsDelim(']') {
							if v10 < 3 {
								if data := in.Raw(); in.Ok() {
									in.AddError(((v9)[v10]).UnmarshalJSON(data))
								}
								v10++
							} else {
								in.SkipRecursive()
							}
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v9)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([][3]decimal.Decimal, 0, 1)
					} else {
						out.Bids = [][3]decimal.Decimal{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v11 [3]decimal.Decimal
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('[')
						v12 := 0
						for !in.IsDelim(']') {
							if v12 < 3 {
								if data := in.Raw(); in.Ok() {
									in.AddError(((v11)[v12]).UnmarshalJSON(data))
								}
								v12++
							} else {
								in.SkipRecursive()
							}
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v11)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "ts":
			out.Timestamp = string(in.String())
		case "checksum":
			out.Checksum = int32(in.Int32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(out *jwriter.Writer, in WSDepthItem) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix[1:])
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v13, v14 := range in.Asks {
				if v13 > 0 {
					out.RawByte(',')
				}
				out.RawByte('[')
				for v15 := range v14 {
					if v15 > 0 {
						out.RawByte(',')
					}
					out.Raw(((v14)[v15]).MarshalJSON())
				}
				out.RawByte(']')
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v16, v17 := range in.Bids {
				if v16 > 0 {
					out.RawByte(',')
				}
				out.RawByte('[')
				for v18 := range v17 {
					if v18 > 0 {
						out.RawByte(',')
					}
					out.Raw(((v17)[v18]).MarshalJSON())
				}
				out.RawByte(']')
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"ts\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"checksum\":"
		out.RawString(prefix)
		out.Int32(int32(in.Checksum))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSDepthItem) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSDepthItem) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSDepthItem) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSDepthItem) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi10(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(in *jlexer.Lexer, out *UserSpotAccountWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(BaseOpSubscriptionArgs)
				}
				(*out.Arg).UnmarshalEasyJSON(in)
			}
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(out *jwriter.Writer, in UserSpotAccountWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil {
			out.RawString("null")
		} else {
			(*in.Arg).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserSpotAccountWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserSpotAccountWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserSpotAccountWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserSpotAccountWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi11(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(in *jlexer.Lexer, out *UserOrdersWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(BaseOpSubscriptionArgs)
				}
				(*out.Arg).UnmarshalEasyJSON(in)
			}
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*OrderUpdateWS, 0, 8)
					} else {
						out.Data = []*OrderUpdateWS{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v19 *OrderUpdateWS
					if in.IsNull() {
						in.Skip()
						v19 = nil
					} else {
						if v19 == nil {
							v19 = new(OrderUpdateWS)
						}
						(*v19).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(out *jwriter.Writer, in UserOrdersWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil {
			out.RawString("null")
		} else {
			(*in.Arg).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.Data {
				if v20 > 0 {
					out.RawByte(',')
				}
				if v21 == nil {
					out.RawString("null")
				} else {
					(*v21).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserOrdersWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserOrdersWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserOrdersWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserOrdersWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi12(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(in *jlexer.Lexer, out *TradeFeeListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*TradeFee, 0, 8)
					} else {
						out.Data = []*TradeFee{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v22 *TradeFee
					if in.IsNull() {
						in.Skip()
						v22 = nil
					} else {
						if v22 == nil {
							v22 = new(TradeFee)
						}
						(*v22).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v22)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(out *jwriter.Writer, in TradeFeeListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v23, v24 := range in.Data {
				if v23 > 0 {
					out.RawByte(',')
				}
				if v24 == nil {
					out.RawString("null")
				} else {
					(*v24).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TradeFeeListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TradeFeeListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TradeFeeListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TradeFeeListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi13(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(in *jlexer.Lexer, out *TradeFee) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "maker":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Maker).UnmarshalJSON(data))
			}
		case "taker":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Taker).UnmarshalJSON(data))
			}
		case "ts":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(out *jwriter.Writer, in TradeFee) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"maker\":"
		out.RawString(prefix[1:])
		out.Raw((in.Maker).MarshalJSON())
	}
	{
		const prefix string = ",\"taker\":"
		out.RawString(prefix)
		out.Raw((in.Taker).MarshalJSON())
	}
	{
		const prefix string = ",\"ts\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TradeFee) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TradeFee) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TradeFee) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TradeFee) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi14(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(in *jlexer.Lexer, out *SwapTradeList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapTradeList, 0, 0)
			} else {
				*out = SwapTradeList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v25 BaseTradeInfo
			(v25).UnmarshalEasyJSON(in)
			*out = append(*out, v25)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(out *jwriter.Writer, in SwapTradeList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v26, v27 := range in {
			if v26 > 0 {
				out.RawByte(',')
			}
			(v27).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapTradeList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapTradeList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapTradeList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapTradeList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi15(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(in *jlexer.Lexer, out *SwapTickerList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapTickerList, 0, 0)
			} else {
				*out = SwapTickerList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v28 BaseTickerInfo
			(v28).UnmarshalEasyJSON(in)
			*out = append(*out, v28)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(out *jwriter.Writer, in SwapTickerList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v29, v30 := range in {
			if v29 > 0 {
				out.RawByte(',')
			}
			(v30).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapTickerList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapTickerList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapTickerList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapTickerList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi16(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(in *jlexer.Lexer, out *SwapRate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "rate":
			out.Rate = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(out *jwriter.Writer, in SwapRate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"rate\":"
		out.RawString(prefix)
		out.String(string(in.Rate))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapRate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapRate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapRate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapRate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi17(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(in *jlexer.Lexer, out *SwapPriceLimit) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "lowest":
			out.Lowest = string(in.String())
		case "highest":
			out.Highest = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(out *jwriter.Writer, in SwapPriceLimit) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"lowest\":"
		out.RawString(prefix)
		out.String(string(in.Lowest))
	}
	{
		const prefix string = ",\"highest\":"
		out.RawString(prefix)
		out.String(string(in.Highest))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPriceLimit) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPriceLimit) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPriceLimit) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPriceLimit) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi18(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(in *jlexer.Lexer, out *SwapPositionList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapPositionList, 0, 0)
			} else {
				*out = SwapPositionList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v31 SwapPosition
			(v31).UnmarshalEasyJSON(in)
			*out = append(*out, v31)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(out *jwriter.Writer, in SwapPositionList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v32, v33 := range in {
			if v32 > 0 {
				out.RawByte(',')
			}
			(v33).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPositionList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPositionList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPositionList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPositionList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi19(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(in *jlexer.Lexer, out *SwapPositionHolding) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "liquidation_price":
			out.LiquidationPrice = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "avail_position":
			out.AvailPosition = string(in.String())
		case "avg_cost":
			out.AvgCost = string(in.String())
		case "settlement_price":
			out.SettlementPrice = string(in.String())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "leverage":
			out.Leverage = string(in.String())
		case "realized_pnl":
			out.RealizedPnl = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "margin":
			out.Margin = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(out *jwriter.Writer, in SwapPositionHolding) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"liquidation_price\":"
		out.RawString(prefix[1:])
		out.String(string(in.LiquidationPrice))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"avail_position\":"
		out.RawString(prefix)
		out.String(string(in.AvailPosition))
	}
	{
		const prefix string = ",\"avg_cost\":"
		out.RawString(prefix)
		out.String(string(in.AvgCost))
	}
	{
		const prefix string = ",\"settlement_price\":"
		out.RawString(prefix)
		out.String(string(in.SettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.String(string(in.Leverage))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.String(string(in.RealizedPnl))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"margin\":"
		out.RawString(prefix)
		out.String(string(in.Margin))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPositionHolding) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPositionHolding) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPositionHolding) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPositionHolding) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi20(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(in *jlexer.Lexer, out *SwapPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "holding":
			if in.IsNull() {
				in.Skip()
				out.Holding = nil
			} else {
				in.Delim('[')
				if out.Holding == nil {
					if !in.IsDelim(']') {
						out.Holding = make([]SwapPositionHolding, 0, 0)
					} else {
						out.Holding = []SwapPositionHolding{}
					}
				} else {
					out.Holding = (out.Holding)[:0]
				}
				for !in.IsDelim(']') {
					var v34 SwapPositionHolding
					(v34).UnmarshalEasyJSON(in)
					out.Holding = append(out.Holding, v34)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(out *jwriter.Writer, in SwapPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix[1:])
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"holding\":"
		out.RawString(prefix)
		if in.Holding == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v35, v36 := range in.Holding {
				if v35 > 0 {
					out.RawByte(',')
				}
				(v36).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi21(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(in *jlexer.Lexer, out *SwapOrdersResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.OrderInfo = nil
			} else {
				in.Delim('[')
				if out.OrderInfo == nil {
					if !in.IsDelim(']') {
						out.OrderInfo = make([]BaseSwapOrderResult, 0, 0)
					} else {
						out.OrderInfo = []BaseSwapOrderResult{}
					}
				} else {
					out.OrderInfo = (out.OrderInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v37 BaseSwapOrderResult
					(v37).UnmarshalEasyJSON(in)
					out.OrderInfo = append(out.OrderInfo, v37)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(out *jwriter.Writer, in SwapOrdersResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix[1:])
		if in.OrderInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v38, v39 := range in.OrderInfo {
				if v38 > 0 {
					out.RawByte(',')
				}
				(v39).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapOrdersResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapOrdersResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapOrdersResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapOrdersResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi22(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(in *jlexer.Lexer, out *SwapOrdersInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.OrderInfo = nil
			} else {
				in.Delim('[')
				if out.OrderInfo == nil {
					if !in.IsDelim(']') {
						out.OrderInfo = make([]BaseOrderInfo, 0, 0)
					} else {
						out.OrderInfo = []BaseOrderInfo{}
					}
				} else {
					out.OrderInfo = (out.OrderInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v40 BaseOrderInfo
					(v40).UnmarshalEasyJSON(in)
					out.OrderInfo = append(out.OrderInfo, v40)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(out *jwriter.Writer, in SwapOrdersInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix[1:])
		if in.OrderInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v41, v42 := range in.OrderInfo {
				if v41 > 0 {
					out.RawByte(',')
				}
				(v42).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapOrdersInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapOrdersInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapOrdersInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapOrdersInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi23(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(in *jlexer.Lexer, out *SwapOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "error_message":
			out.ErrorMessage = string(in.String())
		case "error_code":
			out.ErrorCode = string(in.String())
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(out *jwriter.Writer, in SwapOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.String(string(in.ErrorCode))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi24(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(in *jlexer.Lexer, out *SwapMarkPrice) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "mark_price":
			out.MarkPrice = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(out *jwriter.Writer, in SwapMarkPrice) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"mark_price\":"
		out.RawString(prefix)
		out.String(string(in.MarkPrice))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapMarkPrice) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapMarkPrice) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapMarkPrice) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapMarkPrice) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi25(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(in *jlexer.Lexer, out *SwapLiquidationList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapLiquidationList, 0, 0)
			} else {
				*out = SwapLiquidationList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v43 BaseLiquidationInfo
			(v43).UnmarshalEasyJSON(in)
			*out = append(*out, v43)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(out *jwriter.Writer, in SwapLiquidationList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v44, v45 := range in {
			if v44 > 0 {
				out.RawByte(',')
			}
			(v45).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapLiquidationList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapLiquidationList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapLiquidationList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapLiquidationList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi26(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(in *jlexer.Lexer, out *SwapInstrumentList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapInstrumentList, 0, 0)
			} else {
				*out = SwapInstrumentList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v46 BaseInstrumentInfo
			(v46).UnmarshalEasyJSON(in)
			*out = append(*out, v46)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(out *jwriter.Writer, in SwapInstrumentList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v47, v48 := range in {
			if v47 > 0 {
				out.RawByte(',')
			}
			(v48).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapInstrumentList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapInstrumentList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapInstrumentList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapInstrumentList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi27(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(in *jlexer.Lexer, out *SwapInstrumentDepth) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "timestamp":
			out.Timestamp = string(in.String())
		case "time":
			out.Time = string(in.String())
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([]BaesDepthInfo, 0, 2)
					} else {
						out.Bids = []BaesDepthInfo{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v49 BaesDepthInfo
					if in.IsNull() {
						in.Skip()
						v49 = nil
					} else {
						in.Delim('[')
						if v49 == nil {
							if !in.IsDelim(']') {
								v49 = make(BaesDepthInfo, 0, 4)
							} else {
								v49 = BaesDepthInfo{}
							}
						} else {
							v49 = (v49)[:0]
						}
						for !in.IsDelim(']') {
							var v50 interface{}
							if m, ok := v50.(easyjson.Unmarshaler); ok {
								m.UnmarshalEasyJSON(in)
							} else if m, ok := v50.(json.Unmarshaler); ok {
								_ = m.UnmarshalJSON(in.Raw())
							} else {
								v50 = in.Interface()
							}
							v49 = append(v49, v50)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v49)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([]BaesDepthInfo, 0, 2)
					} else {
						out.Asks = []BaesDepthInfo{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v51 BaesDepthInfo
					if in.IsNull() {
						in.Skip()
						v51 = nil
					} else {
						in.Delim('[')
						if v51 == nil {
							if !in.IsDelim(']') {
								v51 = make(BaesDepthInfo, 0, 4)
							} else {
								v51 = BaesDepthInfo{}
							}
						} else {
							v51 = (v51)[:0]
						}
						for !in.IsDelim(']') {
							var v52 interface{}
							if m, ok := v52.(easyjson.Unmarshaler); ok {
								m.UnmarshalEasyJSON(in)
							} else if m, ok := v52.(json.Unmarshaler); ok {
								_ = m.UnmarshalJSON(in.Raw())
							} else {
								v52 = in.Interface()
							}
							v51 = append(v51, v52)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v51)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(out *jwriter.Writer, in SwapInstrumentDepth) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix[1:])
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"time\":"
		out.RawString(prefix)
		out.String(string(in.Time))
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v53, v54 := range in.Bids {
				if v53 > 0 {
					out.RawByte(',')
				}
				if v54 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v55, v56 := range v54 {
						if v55 > 0 {
							out.RawByte(',')
						}
						if m, ok := v56.(easyjson.Marshaler); ok {
							m.MarshalEasyJSON(out)
						} else if m, ok := v56.(json.Marshaler); ok {
							out.Raw(m.MarshalJSON())
						} else {
							out.Raw(json.Marshal(v56))
						}
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix)
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v57, v58 := range in.Asks {
				if v57 > 0 {
					out.RawByte(',')
				}
				if v58 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v59, v60 := range v58 {
						if v59 > 0 {
							out.RawByte(',')
						}
						if m, ok := v60.(easyjson.Marshaler); ok {
							m.MarshalEasyJSON(out)
						} else if m, ok := v60.(json.Marshaler); ok {
							out.Raw(m.MarshalJSON())
						} else {
							out.Raw(json.Marshal(v60))
						}
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapInstrumentDepth) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapInstrumentDepth) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapInstrumentDepth) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapInstrumentDepth) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi28(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(in *jlexer.Lexer, out *SwapIndexInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "index":
			out.Index = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(out *jwriter.Writer, in SwapIndexInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"index\":"
		out.RawString(prefix)
		out.String(string(in.Index))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapIndexInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapIndexInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapIndexInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapIndexInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi29(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(in *jlexer.Lexer, out *SwapHistoricalFundingRateList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapHistoricalFundingRateList, 0, 0)
			} else {
				*out = SwapHistoricalFundingRateList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v61 BaseHistoricalFundingRate
			(v61).UnmarshalEasyJSON(in)
			*out = append(*out, v61)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(out *jwriter.Writer, in SwapHistoricalFundingRateList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v62, v63 := range in {
			if v62 > 0 {
				out.RawByte(',')
			}
			(v63).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapHistoricalFundingRateList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapHistoricalFundingRateList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapHistoricalFundingRateList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapHistoricalFundingRateList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi30(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(in *jlexer.Lexer, out *SwapFundingTime) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "funding_time":
			out.FundingTime = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(out *jwriter.Writer, in SwapFundingTime) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"funding_time\":"
		out.RawString(prefix)
		out.String(string(in.FundingTime))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapFundingTime) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapFundingTime) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapFundingTime) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapFundingTime) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi31(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(in *jlexer.Lexer, out *SwapFillsInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapFillsInfo, 0, 0)
			} else {
				*out = SwapFillsInfo{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v64 BaseFillInfo
			(v64).UnmarshalEasyJSON(in)
			*out = append(*out, v64)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(out *jwriter.Writer, in SwapFillsInfo) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v65, v66 := range in {
			if v65 > 0 {
				out.RawByte(',')
			}
			(v66).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapFillsInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapFillsInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapFillsInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapFillsInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi32(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(in *jlexer.Lexer, out *SwapCancelOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error_message":
			out.ErrorMessage = string(in.String())
		case "error_code":
			out.ErrorCode = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(out *jwriter.Writer, in SwapCancelOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix[1:])
		out.String(string(in.ErrorMessage))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.String(string(in.ErrorCode))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapCancelOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapCancelOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapCancelOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapCancelOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi33(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(in *jlexer.Lexer, out *SwapBatchCancelOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "ids":
			if in.IsNull() {
				in.Skip()
				out.Ids = nil
			} else {
				in.Delim('[')
				if out.Ids == nil {
					if !in.IsDelim(']') {
						out.Ids = make([]string, 0, 4)
					} else {
						out.Ids = []string{}
					}
				} else {
					out.Ids = (out.Ids)[:0]
				}
				for !in.IsDelim(']') {
					var v67 string
					v67 = string(in.String())
					out.Ids = append(out.Ids, v67)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "result":
			out.Result = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(out *jwriter.Writer, in SwapBatchCancelOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"ids\":"
		out.RawString(prefix)
		if in.Ids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v68, v69 := range in.Ids {
				if v68 > 0 {
					out.RawByte(',')
				}
				out.String(string(v69))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapBatchCancelOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapBatchCancelOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapBatchCancelOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapBatchCancelOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi34(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(in *jlexer.Lexer, out *SwapAccountsSetting) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "long_leverage":
			out.LongLeverage = string(in.String())
		case "short_leverage":
			out.ShortLeverage = string(in.String())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(out *jwriter.Writer, in SwapAccountsSetting) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"long_leverage\":"
		out.RawString(prefix)
		out.String(string(in.LongLeverage))
	}
	{
		const prefix string = ",\"short_leverage\":"
		out.RawString(prefix)
		out.String(string(in.ShortLeverage))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccountsSetting) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccountsSetting) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccountsSetting) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccountsSetting) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi35(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(in *jlexer.Lexer, out *SwapAccountsLedgerList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SwapAccountsLedgerList, 0, 0)
			} else {
				*out = SwapAccountsLedgerList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v70 BaseLedgerInfo
			(v70).UnmarshalEasyJSON(in)
			*out = append(*out, v70)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(out *jwriter.Writer, in SwapAccountsLedgerList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v71, v72 := range in {
			if v71 > 0 {
				out.RawByte(',')
			}
			(v72).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccountsLedgerList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccountsLedgerList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccountsLedgerList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccountsLedgerList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi36(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(in *jlexer.Lexer, out *SwapAccounts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "info":
			if in.IsNull() {
				in.Skip()
				out.Info = nil
			} else {
				in.Delim('[')
				if out.Info == nil {
					if !in.IsDelim(']') {
						out.Info = make([]SwapAccountInfo, 0, 0)
					} else {
						out.Info = []SwapAccountInfo{}
					}
				} else {
					out.Info = (out.Info)[:0]
				}
				for !in.IsDelim(']') {
					var v73 SwapAccountInfo
					(v73).UnmarshalEasyJSON(in)
					out.Info = append(out.Info, v73)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(out *jwriter.Writer, in SwapAccounts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix[1:])
		if in.Info == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v74, v75 := range in.Info {
				if v74 > 0 {
					out.RawByte(',')
				}
				(v75).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccounts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccounts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccounts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccounts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi37(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(in *jlexer.Lexer, out *SwapAccountInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "margin_frozen":
			out.MarginFrozen = string(in.String())
		case "total_avail_balance":
			out.TotalAvailBalance = string(in.String())
		case "margin_ratio":
			out.MarginRatio = string(in.String())
		case "realized_pnl":
			out.RealizedPnl = string(in.String())
		case "unrealized_pnl":
			out.UnrealizedPnl = string(in.String())
		case "fixed_balance":
			out.FixedBalance = string(in.String())
		case "equity":
			out.Equity = string(in.String())
		case "margin":
			out.Margin = string(in.String())
		case "margin_mode":
			out.MarginMode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(out *jwriter.Writer, in SwapAccountInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"margin_frozen\":"
		out.RawString(prefix)
		out.String(string(in.MarginFrozen))
	}
	{
		const prefix string = ",\"total_avail_balance\":"
		out.RawString(prefix)
		out.String(string(in.TotalAvailBalance))
	}
	{
		const prefix string = ",\"margin_ratio\":"
		out.RawString(prefix)
		out.String(string(in.MarginRatio))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.String(string(in.RealizedPnl))
	}
	{
		const prefix string = ",\"unrealized_pnl\":"
		out.RawString(prefix)
		out.String(string(in.UnrealizedPnl))
	}
	{
		const prefix string = ",\"fixed_balance\":"
		out.RawString(prefix)
		out.String(string(in.FixedBalance))
	}
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix)
		out.String(string(in.Equity))
	}
	{
		const prefix string = ",\"margin\":"
		out.RawString(prefix)
		out.String(string(in.Margin))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccountInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccountInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccountInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccountInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi38(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(in *jlexer.Lexer, out *SwapAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "info":
			(out.Info).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(out *jwriter.Writer, in SwapAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix[1:])
		(in.Info).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SwapAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SwapAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SwapAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SwapAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi39(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(in *jlexer.Lexer, out *SubscriptionTopic) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(out *jwriter.Writer, in SubscriptionTopic) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SubscriptionTopic) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SubscriptionTopic) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SubscriptionTopic) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SubscriptionTopic) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi40(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(in *jlexer.Lexer, out *SpotOrderResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ordId":
			out.OrderID = string(in.String())
		case "clOrdId":
			out.ClientOrderID = string(in.String())
		case "sCode":
			out.SCode = string(in.String())
		case "sMsg":
			out.SMsg = string(in.String())
		case "tag":
			out.Tag = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(out *jwriter.Writer, in SpotOrderResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ordId\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderID))
	}
	{
		const prefix string = ",\"clOrdId\":"
		out.RawString(prefix)
		out.String(string(in.ClientOrderID))
	}
	{
		const prefix string = ",\"sCode\":"
		out.RawString(prefix)
		out.String(string(in.SCode))
	}
	{
		const prefix string = ",\"sMsg\":"
		out.RawString(prefix)
		out.String(string(in.SMsg))
	}
	{
		const prefix string = ",\"tag\":"
		out.RawString(prefix)
		out.String(string(in.Tag))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotOrderResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotOrderResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotOrderResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotOrderResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi41(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(in *jlexer.Lexer, out *SpotNewOrderResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*SpotOrderResponse, 0, 8)
					} else {
						out.Data = []*SpotOrderResponse{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v76 *SpotOrderResponse
					if in.IsNull() {
						in.Skip()
						v76 = nil
					} else {
						if v76 == nil {
							v76 = new(SpotOrderResponse)
						}
						(*v76).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v76)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(out *jwriter.Writer, in SpotNewOrderResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v77, v78 := range in.Data {
				if v77 > 0 {
					out.RawByte(',')
				}
				if v78 == nil {
					out.RawString("null")
				} else {
					(*v78).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotNewOrderResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotNewOrderResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotNewOrderResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotNewOrderResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi42(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(in *jlexer.Lexer, out *SpotInstrumentsTickerListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(out *jwriter.Writer, in SpotInstrumentsTickerListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsTickerListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsTickerListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsTickerListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsTickerListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi43(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(in *jlexer.Lexer, out *SpotInstrumentsTickerList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SpotInstrumentsTickerList, 0, 8)
			} else {
				*out = SpotInstrumentsTickerList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v79 *SpotInstrumentTicker
			if in.IsNull() {
				in.Skip()
				v79 = nil
			} else {
				if v79 == nil {
					v79 = new(SpotInstrumentTicker)
				}
				(*v79).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v79)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(out *jwriter.Writer, in SpotInstrumentsTickerList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v80, v81 := range in {
			if v80 > 0 {
				out.RawByte(',')
			}
			if v81 == nil {
				out.RawString("null")
			} else {
				(*v81).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsTickerList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsTickerList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsTickerList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsTickerList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi44(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(in *jlexer.Lexer, out *SpotInstrumentsListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(out *jwriter.Writer, in SpotInstrumentsListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi45(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi46(in *jlexer.Lexer, out *SpotInstrumentsList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SpotInstrumentsList, 0, 8)
			} else {
				*out = SpotInstrumentsList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v82 *SpotInstrument
			if in.IsNull() {
				in.Skip()
				v82 = nil
			} else {
				if v82 == nil {
					v82 = new(SpotInstrument)
				}
				(*v82).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v82)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi46(out *jwriter.Writer, in SpotInstrumentsList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v83, v84 := range in {
			if v83 > 0 {
				out.RawByte(',')
			}
			if v84 == nil {
				out.RawString("null")
			} else {
				(*v84).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentsList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi46(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentsList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi46(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentsList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi46(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentsList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi46(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi47(in *jlexer.Lexer, out *SpotInstrumentTicker) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "askPx":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestAsk).UnmarshalJSON(data))
			}
		case "bidPx":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestBid).UnmarshalJSON(data))
			}
		case "askSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestAskSize).UnmarshalJSON(data))
			}
		case "bidSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BestBidSize).UnmarshalJSON(data))
			}
		case "vol24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.BaseVolume24h).UnmarshalJSON(data))
			}
		case "volCcy24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.QuoteVolume24h).UnmarshalJSON(data))
			}
		case "high24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.High24h).UnmarshalJSON(data))
			}
		case "low24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Low24h).UnmarshalJSON(data))
			}
		case "open24h":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Open24h).UnmarshalJSON(data))
			}
		case "last":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Last).UnmarshalJSON(data))
			}
		case "lastSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastQty).UnmarshalJSON(data))
			}
		case "ts":
			out.Timestamp = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "instType":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi47(out *jwriter.Writer, in SpotInstrumentTicker) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"askPx\":"
		out.RawString(prefix[1:])
		out.Raw((in.BestAsk).MarshalJSON())
	}
	{
		const prefix string = ",\"bidPx\":"
		out.RawString(prefix)
		out.Raw((in.BestBid).MarshalJSON())
	}
	{
		const prefix string = ",\"askSz\":"
		out.RawString(prefix)
		out.Raw((in.BestAskSize).MarshalJSON())
	}
	{
		const prefix string = ",\"bidSz\":"
		out.RawString(prefix)
		out.Raw((in.BestBidSize).MarshalJSON())
	}
	{
		const prefix string = ",\"vol24h\":"
		out.RawString(prefix)
		out.Raw((in.BaseVolume24h).MarshalJSON())
	}
	{
		const prefix string = ",\"volCcy24h\":"
		out.RawString(prefix)
		out.Raw((in.QuoteVolume24h).MarshalJSON())
	}
	{
		const prefix string = ",\"high24h\":"
		out.RawString(prefix)
		out.Raw((in.High24h).MarshalJSON())
	}
	{
		const prefix string = ",\"low24h\":"
		out.RawString(prefix)
		out.Raw((in.Low24h).MarshalJSON())
	}
	{
		const prefix string = ",\"open24h\":"
		out.RawString(prefix)
		out.Raw((in.Open24h).MarshalJSON())
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.Raw((in.Last).MarshalJSON())
	}
	{
		const prefix string = ",\"lastSz\":"
		out.RawString(prefix)
		out.Raw((in.LastQty).MarshalJSON())
	}
	{
		const prefix string = ",\"ts\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"instType\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrumentTicker) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi47(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrumentTicker) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi47(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrumentTicker) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi47(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrumentTicker) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi47(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi48(in *jlexer.Lexer, out *SpotInstrument) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "baseCcy":
			out.BaseCurrency = string(in.String())
		case "quoteCcy":
			out.QuoteCurrency = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "minSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinSize).UnmarshalJSON(data))
			}
		case "lotSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.SizeIncrement).UnmarshalJSON(data))
			}
		case "tickSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.TickSize).UnmarshalJSON(data))
			}
		case "state":
			out.State = StateStatus(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi48(out *jwriter.Writer, in SpotInstrument) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"baseCcy\":"
		out.RawString(prefix[1:])
		out.String(string(in.BaseCurrency))
	}
	{
		const prefix string = ",\"quoteCcy\":"
		out.RawString(prefix)
		out.String(string(in.QuoteCurrency))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"minSz\":"
		out.RawString(prefix)
		out.Raw((in.MinSize).MarshalJSON())
	}
	{
		const prefix string = ",\"lotSz\":"
		out.RawString(prefix)
		out.Raw((in.SizeIncrement).MarshalJSON())
	}
	{
		const prefix string = ",\"tickSz\":"
		out.RawString(prefix)
		out.Raw((in.TickSize).MarshalJSON())
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.State))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotInstrument) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi48(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotInstrument) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi48(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotInstrument) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi48(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotInstrument) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi48(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi49(in *jlexer.Lexer, out *SpotCancelOrderResponseWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = string(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*SpotOrderResponse, 0, 8)
					} else {
						out.Data = []*SpotOrderResponse{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v85 *SpotOrderResponse
					if in.IsNull() {
						in.Skip()
						v85 = nil
					} else {
						if v85 == nil {
							v85 = new(SpotOrderResponse)
						}
						(*v85).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v85)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi49(out *jwriter.Writer, in SpotCancelOrderResponseWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.String(string(in.Code))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v86, v87 := range in.Data {
				if v86 > 0 {
					out.RawByte(',')
				}
				if v87 == nil {
					out.RawString("null")
				} else {
					(*v87).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotCancelOrderResponseWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi49(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotCancelOrderResponseWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi49(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotCancelOrderResponseWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi49(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotCancelOrderResponseWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi49(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi50(in *jlexer.Lexer, out *SpotAccountBalancesListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi50(out *jwriter.Writer, in SpotAccountBalancesListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotAccountBalancesListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi50(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotAccountBalancesListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi50(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotAccountBalancesListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi50(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotAccountBalancesListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi50(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi51(in *jlexer.Lexer, out *SpotAccountBalancesList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(SpotAccountBalancesList, 0, 8)
			} else {
				*out = SpotAccountBalancesList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v88 *SpotAccountBalance
			if in.IsNull() {
				in.Skip()
				v88 = nil
			} else {
				if v88 == nil {
					v88 = new(SpotAccountBalance)
				}
				(*v88).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v88)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi51(out *jwriter.Writer, in SpotAccountBalancesList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v89, v90 := range in {
			if v89 > 0 {
				out.RawByte(',')
			}
			if v90 == nil {
				out.RawString("null")
			} else {
				(*v90).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v SpotAccountBalancesList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi51(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotAccountBalancesList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi51(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotAccountBalancesList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi51(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotAccountBalancesList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi51(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi52(in *jlexer.Lexer, out *SpotAccountBalance) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "details":
			if in.IsNull() {
				in.Skip()
				out.Details = nil
			} else {
				in.Delim('[')
				if out.Details == nil {
					if !in.IsDelim(']') {
						out.Details = make([]struct {
							Frozen    decimal.Decimal `json:"frozenBal"`
							Currency  string          `json:"ccy"`
							EqUSD     decimal.Decimal `json:"eqUsd"`
							Balance   decimal.Decimal `json:"cashBal"`
							Available decimal.Decimal `json:"availBal"`
						}, 0, 0)
					} else {
						out.Details = []struct {
							Frozen    decimal.Decimal `json:"frozenBal"`
							Currency  string          `json:"ccy"`
							EqUSD     decimal.Decimal `json:"eqUsd"`
							Balance   decimal.Decimal `json:"cashBal"`
							Available decimal.Decimal `json:"availBal"`
						}{}
					}
				} else {
					out.Details = (out.Details)[:0]
				}
				for !in.IsDelim(']') {
					var v91 struct {
						Frozen    decimal.Decimal `json:"frozenBal"`
						Currency  string          `json:"ccy"`
						EqUSD     decimal.Decimal `json:"eqUsd"`
						Balance   decimal.Decimal `json:"cashBal"`
						Available decimal.Decimal `json:"availBal"`
					}
					easyjson25363b2dDecode(in, &v91)
					out.Details = append(out.Details, v91)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi52(out *jwriter.Writer, in SpotAccountBalance) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"details\":"
		out.RawString(prefix[1:])
		if in.Details == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v92, v93 := range in.Details {
				if v92 > 0 {
					out.RawByte(',')
				}
				easyjson25363b2dEncode(out, v93)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SpotAccountBalance) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi52(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SpotAccountBalance) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi52(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SpotAccountBalance) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi52(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SpotAccountBalance) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi52(l, v)
}
func easyjson25363b2dDecode(in *jlexer.Lexer, out *struct {
	Frozen    decimal.Decimal `json:"frozenBal"`
	Currency  string          `json:"ccy"`
	EqUSD     decimal.Decimal `json:"eqUsd"`
	Balance   decimal.Decimal `json:"cashBal"`
	Available decimal.Decimal `json:"availBal"`
}) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "frozenBal":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Frozen).UnmarshalJSON(data))
			}
		case "ccy":
			out.Currency = string(in.String())
		case "eqUsd":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.EqUSD).UnmarshalJSON(data))
			}
		case "cashBal":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Balance).UnmarshalJSON(data))
			}
		case "availBal":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Available).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncode(out *jwriter.Writer, in struct {
	Frozen    decimal.Decimal `json:"frozenBal"`
	Currency  string          `json:"ccy"`
	EqUSD     decimal.Decimal `json:"eqUsd"`
	Balance   decimal.Decimal `json:"cashBal"`
	Available decimal.Decimal `json:"availBal"`
}) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"frozenBal\":"
		out.RawString(prefix[1:])
		out.Raw((in.Frozen).MarshalJSON())
	}
	{
		const prefix string = ",\"ccy\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"eqUsd\":"
		out.RawString(prefix)
		out.Raw((in.EqUSD).MarshalJSON())
	}
	{
		const prefix string = ",\"cashBal\":"
		out.RawString(prefix)
		out.Raw((in.Balance).MarshalJSON())
	}
	{
		const prefix string = ",\"availBal\":"
		out.RawString(prefix)
		out.Raw((in.Available).MarshalJSON())
	}
	out.RawByte('}')
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi53(in *jlexer.Lexer, out *ServerTime) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "iso":
			out.Iso = string(in.String())
		case "epoch":
			out.Epoch = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi53(out *jwriter.Writer, in ServerTime) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"iso\":"
		out.RawString(prefix[1:])
		out.String(string(in.Iso))
	}
	{
		const prefix string = ",\"epoch\":"
		out.RawString(prefix)
		out.String(string(in.Epoch))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ServerTime) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi53(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ServerTime) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi53(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ServerTime) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi53(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ServerTime) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi53(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi54(in *jlexer.Lexer, out *ResultReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi54(out *jwriter.Writer, in ResultReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ResultReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi54(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ResultReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi54(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ResultReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi54(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ResultReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi54(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi55(in *jlexer.Lexer, out *PlaceOrdersInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "order_data":
			if in.IsNull() {
				in.Skip()
				out.OrderData = nil
			} else {
				in.Delim('[')
				if out.OrderData == nil {
					if !in.IsDelim(']') {
						out.OrderData = make([]*BasePlaceOrderInfo, 0, 8)
					} else {
						out.OrderData = []*BasePlaceOrderInfo{}
					}
				} else {
					out.OrderData = (out.OrderData)[:0]
				}
				for !in.IsDelim(']') {
					var v94 *BasePlaceOrderInfo
					if in.IsNull() {
						in.Skip()
						v94 = nil
					} else {
						if v94 == nil {
							v94 = new(BasePlaceOrderInfo)
						}
						(*v94).UnmarshalEasyJSON(in)
					}
					out.OrderData = append(out.OrderData, v94)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi55(out *jwriter.Writer, in PlaceOrdersInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"order_data\":"
		out.RawString(prefix)
		if in.OrderData == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v95, v96 := range in.OrderData {
				if v95 > 0 {
					out.RawByte(',')
				}
				if v96 == nil {
					out.RawString("null")
				} else {
					(*v96).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PlaceOrdersInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi55(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PlaceOrdersInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi55(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PlaceOrdersInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi55(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PlaceOrdersInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi55(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi56(in *jlexer.Lexer, out *PlaceOrderInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "match_price":
			out.MatchPrice = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi56(out *jwriter.Writer, in PlaceOrderInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"match_price\":"
		out.RawString(prefix)
		out.String(string(in.MatchPrice))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PlaceOrderInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi56(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PlaceOrderInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi56(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PlaceOrderInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi56(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PlaceOrderInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi56(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi57(in *jlexer.Lexer, out *PagingResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ResultItems":
			if in.IsNull() {
				in.Skip()
				out.ResultItems = nil
			} else {
				in.Delim('[')
				if out.ResultItems == nil {
					if !in.IsDelim(']') {
						out.ResultItems = make([]map[string]string, 0, 8)
					} else {
						out.ResultItems = []map[string]string{}
					}
				} else {
					out.ResultItems = (out.ResultItems)[:0]
				}
				for !in.IsDelim(']') {
					var v97 map[string]string
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('{')
						v97 = make(map[string]string)
						for !in.IsDelim('}') {
							key := string(in.String())
							in.WantColon()
							var v98 string
							v98 = string(in.String())
							(v97)[key] = v98
							in.WantComma()
						}
						in.Delim('}')
					}
					out.ResultItems = append(out.ResultItems, v97)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "CursorBefore":
			out.CursorBefore = string(in.String())
		case "CursorAfter":
			out.CursorAfter = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi57(out *jwriter.Writer, in PagingResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ResultItems\":"
		out.RawString(prefix[1:])
		if in.ResultItems == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v99, v100 := range in.ResultItems {
				if v99 > 0 {
					out.RawByte(',')
				}
				if v100 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
					out.RawString(`null`)
				} else {
					out.RawByte('{')
					v101First := true
					for v101Name, v101Value := range v100 {
						if v101First {
							v101First = false
						} else {
							out.RawByte(',')
						}
						out.String(string(v101Name))
						out.RawByte(':')
						out.String(string(v101Value))
					}
					out.RawByte('}')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"CursorBefore\":"
		out.RawString(prefix)
		out.String(string(in.CursorBefore))
	}
	{
		const prefix string = ",\"CursorAfter\":"
		out.RawString(prefix)
		out.String(string(in.CursorAfter))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PagingResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi57(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PagingResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi57(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PagingResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi57(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PagingResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi57(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi58(in *jlexer.Lexer, out *PageResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "From":
			out.From = int(in.Int())
		case "To":
			out.To = int(in.Int())
		case "Limit":
			out.Limit = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi58(out *jwriter.Writer, in PageResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"From\":"
		out.RawString(prefix[1:])
		out.Int(int(in.From))
	}
	{
		const prefix string = ",\"To\":"
		out.RawString(prefix)
		out.Int(int(in.To))
	}
	{
		const prefix string = ",\"Limit\":"
		out.RawString(prefix)
		out.Int(int(in.Limit))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PageResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi58(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PageResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi58(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PageResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi58(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PageResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi58(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi59(in *jlexer.Lexer, out *OrdersListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi59(out *jwriter.Writer, in OrdersListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrdersListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi59(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrdersListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi59(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrdersListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi59(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrdersListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi59(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi60(in *jlexer.Lexer, out *OrdersList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(OrdersList, 0, 8)
			} else {
				*out = OrdersList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v102 *Order
			if in.IsNull() {
				in.Skip()
				v102 = nil
			} else {
				if v102 == nil {
					v102 = new(Order)
				}
				(*v102).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v102)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi60(out *jwriter.Writer, in OrdersList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v103, v104 := range in {
			if v103 > 0 {
				out.RawByte(',')
			}
			if v104 == nil {
				out.RawString("null")
			} else {
				(*v104).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v OrdersList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi60(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrdersList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi60(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrdersList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi60(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrdersList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi60(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi61(in *jlexer.Lexer, out *OrderUpdateWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	out.Order = new(Order)
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ordId":
			out.OrderID = string(in.String())
		case "clOrdId":
			out.ClientOrderID = string(in.String())
		case "cTime":
			out.Timestamp = string(in.String())
		case "px":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Price).UnmarshalJSON(data))
			}
		case "avgPx":
			out.PriceAvgStr = string(in.String())
		case "PriceAvg":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.PriceAvg).UnmarshalJSON(data))
			}
		case "sz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Quantity).UnmarshalJSON(data))
			}
		case "accFillSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.QuantityFilled).UnmarshalJSON(data))
			}
		case "Total":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Total).UnmarshalJSON(data))
			}
		case "pnl":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ProfitAndLoss).UnmarshalJSON(data))
			}
		case "fee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Fee).UnmarshalJSON(data))
			}
		case "feeCcy":
			out.FeeCurrency = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "tag":
			out.Tag = string(in.String())
		case "posSide":
			out.PosSide = string(in.String())
		case "ordType":
			out.Type = OrderType(in.String())
		case "side":
			out.Side = OrderSide(in.String())
		case "state":
			out.Status = OrderStatus(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi61(out *jwriter.Writer, in OrderUpdateWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ordId\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderID))
	}
	{
		const prefix string = ",\"clOrdId\":"
		out.RawString(prefix)
		out.String(string(in.ClientOrderID))
	}
	{
		const prefix string = ",\"cTime\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"px\":"
		out.RawString(prefix)
		out.Raw((in.Price).MarshalJSON())
	}
	{
		const prefix string = ",\"avgPx\":"
		out.RawString(prefix)
		out.String(string(in.PriceAvgStr))
	}
	{
		const prefix string = ",\"PriceAvg\":"
		out.RawString(prefix)
		out.Raw((in.PriceAvg).MarshalJSON())
	}
	{
		const prefix string = ",\"sz\":"
		out.RawString(prefix)
		out.Raw((in.Quantity).MarshalJSON())
	}
	{
		const prefix string = ",\"accFillSz\":"
		out.RawString(prefix)
		out.Raw((in.QuantityFilled).MarshalJSON())
	}
	{
		const prefix string = ",\"Total\":"
		out.RawString(prefix)
		out.Raw((in.Total).MarshalJSON())
	}
	{
		const prefix string = ",\"pnl\":"
		out.RawString(prefix)
		out.Raw((in.ProfitAndLoss).MarshalJSON())
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Raw((in.Fee).MarshalJSON())
	}
	{
		const prefix string = ",\"feeCcy\":"
		out.RawString(prefix)
		out.String(string(in.FeeCurrency))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"tag\":"
		out.RawString(prefix)
		out.String(string(in.Tag))
	}
	{
		const prefix string = ",\"posSide\":"
		out.RawString(prefix)
		out.String(string(in.PosSide))
	}
	{
		const prefix string = ",\"ordType\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrderUpdateWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi61(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrderUpdateWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi61(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrderUpdateWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi61(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrderUpdateWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi61(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi62(in *jlexer.Lexer, out *OrderInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "client_oid":
			out.ClientOid = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "error_code":
			out.ErrorCode = int64(in.Int64())
		case "error_message":
			out.ErrorMessage = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi62(out *jwriter.Writer, in OrderInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix[1:])
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.Int64(int64(in.ErrorCode))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OrderInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi62(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OrderInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi62(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OrderInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi62(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OrderInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi62(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi63(in *jlexer.Lexer, out *Order) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ordId":
			out.OrderID = string(in.String())
		case "clOrdId":
			out.ClientOrderID = string(in.String())
		case "cTime":
			out.Timestamp = string(in.String())
		case "px":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Price).UnmarshalJSON(data))
			}
		case "avgPx":
			out.PriceAvgStr = string(in.String())
		case "PriceAvg":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.PriceAvg).UnmarshalJSON(data))
			}
		case "sz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Quantity).UnmarshalJSON(data))
			}
		case "accFillSz":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.QuantityFilled).UnmarshalJSON(data))
			}
		case "Total":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Total).UnmarshalJSON(data))
			}
		case "pnl":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ProfitAndLoss).UnmarshalJSON(data))
			}
		case "fee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Fee).UnmarshalJSON(data))
			}
		case "feeCcy":
			out.FeeCurrency = string(in.String())
		case "instId":
			out.Pair = string(in.String())
		case "tag":
			out.Tag = string(in.String())
		case "posSide":
			out.PosSide = string(in.String())
		case "ordType":
			out.Type = OrderType(in.String())
		case "side":
			out.Side = OrderSide(in.String())
		case "state":
			out.Status = OrderStatus(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi63(out *jwriter.Writer, in Order) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ordId\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderID))
	}
	{
		const prefix string = ",\"clOrdId\":"
		out.RawString(prefix)
		out.String(string(in.ClientOrderID))
	}
	{
		const prefix string = ",\"cTime\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"px\":"
		out.RawString(prefix)
		out.Raw((in.Price).MarshalJSON())
	}
	{
		const prefix string = ",\"avgPx\":"
		out.RawString(prefix)
		out.String(string(in.PriceAvgStr))
	}
	{
		const prefix string = ",\"PriceAvg\":"
		out.RawString(prefix)
		out.Raw((in.PriceAvg).MarshalJSON())
	}
	{
		const prefix string = ",\"sz\":"
		out.RawString(prefix)
		out.Raw((in.Quantity).MarshalJSON())
	}
	{
		const prefix string = ",\"accFillSz\":"
		out.RawString(prefix)
		out.Raw((in.QuantityFilled).MarshalJSON())
	}
	{
		const prefix string = ",\"Total\":"
		out.RawString(prefix)
		out.Raw((in.Total).MarshalJSON())
	}
	{
		const prefix string = ",\"pnl\":"
		out.RawString(prefix)
		out.Raw((in.ProfitAndLoss).MarshalJSON())
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Raw((in.Fee).MarshalJSON())
	}
	{
		const prefix string = ",\"feeCcy\":"
		out.RawString(prefix)
		out.String(string(in.FeeCurrency))
	}
	{
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"tag\":"
		out.RawString(prefix)
		out.String(string(in.Tag))
	}
	{
		const prefix string = ",\"posSide\":"
		out.RawString(prefix)
		out.String(string(in.PosSide))
	}
	{
		const prefix string = ",\"ordType\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"state\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Order) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi63(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Order) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi63(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Order) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi63(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Order) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi63(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi64(in *jlexer.Lexer, out *FuturesUsersSelfTrailingVolumesResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "FuturesUsersSelfTrailingVolumeResult":
			if in.IsNull() {
				in.Skip()
				out.FuturesUsersSelfTrailingVolumeResult = nil
			} else {
				in.Delim('[')
				if out.FuturesUsersSelfTrailingVolumeResult == nil {
					if !in.IsDelim(']') {
						out.FuturesUsersSelfTrailingVolumeResult = make([]FuturesUsersSelfTrailingVolumeResult, 0, 1)
					} else {
						out.FuturesUsersSelfTrailingVolumeResult = []FuturesUsersSelfTrailingVolumeResult{}
					}
				} else {
					out.FuturesUsersSelfTrailingVolumeResult = (out.FuturesUsersSelfTrailingVolumeResult)[:0]
				}
				for !in.IsDelim(']') {
					var v105 FuturesUsersSelfTrailingVolumeResult
					(v105).UnmarshalEasyJSON(in)
					out.FuturesUsersSelfTrailingVolumeResult = append(out.FuturesUsersSelfTrailingVolumeResult, v105)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi64(out *jwriter.Writer, in FuturesUsersSelfTrailingVolumesResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"FuturesUsersSelfTrailingVolumeResult\":"
		out.RawString(prefix[1:])
		if in.FuturesUsersSelfTrailingVolumeResult == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v106, v107 := range in.FuturesUsersSelfTrailingVolumeResult {
				if v106 > 0 {
					out.RawByte(',')
				}
				(v107).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesUsersSelfTrailingVolumesResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi64(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesUsersSelfTrailingVolumesResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi64(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumesResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi64(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumesResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi64(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi65(in *jlexer.Lexer, out *FuturesUsersSelfTrailingVolumeResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "exchange_volume":
			out.ExchangeVolume = float64(in.Float64Str())
		case "volume":
			out.Volume = float64(in.Float64Str())
		case "recorded_at":
			out.RecordedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi65(out *jwriter.Writer, in FuturesUsersSelfTrailingVolumeResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"exchange_volume\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ExchangeVolume))
	}
	{
		const prefix string = ",\"volume\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Volume))
	}
	{
		const prefix string = ",\"recorded_at\":"
		out.RawString(prefix)
		out.String(string(in.RecordedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesUsersSelfTrailingVolumeResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi65(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesUsersSelfTrailingVolumeResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi65(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumeResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi65(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesUsersSelfTrailingVolumeResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi65(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi66(in *jlexer.Lexer, out *FuturesPositionBase) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long_qty":
			out.LongQty = float64(in.Float64Str())
		case "long_avail_qty":
			out.LongAvailQty = float64(in.Float64Str())
		case "long_avg_cost":
			out.LongAvgCost = float64(in.Float64Str())
		case "long_settlement_price":
			out.LongSettlementPrice = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "short_qty":
			out.ShortQty = float64(in.Float64Str())
		case "short_avail_qty":
			out.ShortAvailQty = float64(in.Float64Str())
		case "short_avg_cost":
			out.ShortAvgCost = float64(in.Float64Str())
		case "short_settlement_price":
			out.ShortSettlementPrice = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi66(out *jwriter.Writer, in FuturesPositionBase) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long_qty\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.LongQty))
	}
	{
		const prefix string = ",\"long_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvailQty))
	}
	{
		const prefix string = ",\"long_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvgCost))
	}
	{
		const prefix string = ",\"long_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongSettlementPrice))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"short_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortQty))
	}
	{
		const prefix string = ",\"short_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvailQty))
	}
	{
		const prefix string = ",\"short_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvgCost))
	}
	{
		const prefix string = ",\"short_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortSettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesPositionBase) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi66(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesPositionBase) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi66(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesPositionBase) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi66(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesPositionBase) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi66(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi67(in *jlexer.Lexer, out *FuturesPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "MarginMode":
			out.MarginMode = string(in.String())
		case "CrossPosition":
			if in.IsNull() {
				in.Skip()
				out.CrossPosition = nil
			} else {
				in.Delim('[')
				if out.CrossPosition == nil {
					if !in.IsDelim(']') {
						out.CrossPosition = make([]FuturesCrossPositionHolding, 0, 0)
					} else {
						out.CrossPosition = []FuturesCrossPositionHolding{}
					}
				} else {
					out.CrossPosition = (out.CrossPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v108 FuturesCrossPositionHolding
					(v108).UnmarshalEasyJSON(in)
					out.CrossPosition = append(out.CrossPosition, v108)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "FixedPosition":
			if in.IsNull() {
				in.Skip()
				out.FixedPosition = nil
			} else {
				in.Delim('[')
				if out.FixedPosition == nil {
					if !in.IsDelim(']') {
						out.FixedPosition = make([]FuturesFixedPositionHolding, 0, 0)
					} else {
						out.FixedPosition = []FuturesFixedPositionHolding{}
					}
				} else {
					out.FixedPosition = (out.FixedPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v109 FuturesFixedPositionHolding
					(v109).UnmarshalEasyJSON(in)
					out.FixedPosition = append(out.FixedPosition, v109)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi67(out *jwriter.Writer, in FuturesPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"MarginMode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"CrossPosition\":"
		out.RawString(prefix)
		if in.CrossPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v110, v111 := range in.CrossPosition {
				if v110 > 0 {
					out.RawByte(',')
				}
				(v111).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"FixedPosition\":"
		out.RawString(prefix)
		if in.FixedPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v112, v113 := range in.FixedPosition {
				if v112 > 0 {
					out.RawByte(',')
				}
				(v113).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi67(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi67(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi67(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi67(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi68(in *jlexer.Lexer, out *FuturesOrdersParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Currency":
			out.Currency = string(in.String())
		case "Status":
			out.Status = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi68(out *jwriter.Writer, in FuturesOrdersParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Currency\":"
		out.RawString(prefix[1:])
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"Status\":"
		out.RawString(prefix)
		out.Int(int(in.Status))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesOrdersParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi68(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesOrdersParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi68(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesOrdersParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi68(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesOrdersParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi68(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi69(in *jlexer.Lexer, out *FuturesNewOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "order_id":
			out.OrderId = int64(in.Int64Str())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi69(out *jwriter.Writer, in FuturesNewOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OrderId))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesNewOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi69(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesNewOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi69(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesNewOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi69(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesNewOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi69(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi70(in *jlexer.Lexer, out *FuturesNewOrderParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "leverage":
			out.Leverage = string(in.String())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "match_price":
			out.MatchPrice = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi70(out *jwriter.Writer, in FuturesNewOrderParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.String(string(in.Leverage))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"match_price\":"
		out.RawString(prefix)
		out.String(string(in.MatchPrice))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesNewOrderParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi70(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesNewOrderParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi70(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesNewOrderParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi70(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesNewOrderParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi70(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi71(in *jlexer.Lexer, out *FuturesMarkdown) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "mark_price":
			out.MarkPrice = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi71(out *jwriter.Writer, in FuturesMarkdown) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"mark_price\":"
		out.RawString(prefix)
		out.String(string(in.MarkPrice))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesMarkdown) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi71(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesMarkdown) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi71(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesMarkdown) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi71(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesMarkdown) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi71(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi72(in *jlexer.Lexer, out *FuturesInstrumentsResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "underlying_index":
			out.UnderlyingIndex = string(in.String())
		case "quote_currency":
			out.QuoteCurrency = string(in.String())
		case "tick_size":
			out.TickSize = float64(in.Float64Str())
		case "contract_val":
			out.ContractVal = float64(in.Float64Str())
		case "listing":
			out.Listing = string(in.String())
		case "delivery":
			out.Delivery = string(in.String())
		case "trade_increment":
			out.TradeIncrement = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi72(out *jwriter.Writer, in FuturesInstrumentsResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"underlying_index\":"
		out.RawString(prefix)
		out.String(string(in.UnderlyingIndex))
	}
	{
		const prefix string = ",\"quote_currency\":"
		out.RawString(prefix)
		out.String(string(in.QuoteCurrency))
	}
	{
		const prefix string = ",\"tick_size\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TickSize))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ContractVal))
	}
	{
		const prefix string = ",\"listing\":"
		out.RawString(prefix)
		out.String(string(in.Listing))
	}
	{
		const prefix string = ",\"delivery\":"
		out.RawString(prefix)
		out.String(string(in.Delivery))
	}
	{
		const prefix string = ",\"trade_increment\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TradeIncrement))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentsResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi72(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentsResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi72(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentsResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi72(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentsResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi72(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi73(in *jlexer.Lexer, out *FuturesInstrumentTradesResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "trade_id":
			out.TradeId = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "price":
			out.Price = float64(in.Float64Str())
		case "qty":
			out.Qty = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi73(out *jwriter.Writer, in FuturesInstrumentTradesResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.TradeId))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Price))
	}
	{
		const prefix string = ",\"qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Qty))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentTradesResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi73(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentTradesResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi73(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentTradesResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi73(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentTradesResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi73(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi74(in *jlexer.Lexer, out *FuturesInstrumentTickerResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "best_bid":
			out.BestBid = float64(in.Float64Str())
		case "best_ask":
			out.BestAsk = float64(in.Float64Str())
		case "high_24h":
			out.High24h = float64(in.Float64Str())
		case "low_24h":
			out.Low24h = float64(in.Float64Str())
		case "last":
			out.Last = float64(in.Float64Str())
		case "volume_24h":
			out.Volume24h = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi74(out *jwriter.Writer, in FuturesInstrumentTickerResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"best_bid\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.BestBid))
	}
	{
		const prefix string = ",\"best_ask\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.BestAsk))
	}
	{
		const prefix string = ",\"high_24h\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.High24h))
	}
	{
		const prefix string = ",\"low_24h\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Low24h))
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Last))
	}
	{
		const prefix string = ",\"volume_24h\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Volume24h))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentTickerResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi74(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentTickerResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi74(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentTickerResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi74(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentTickerResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi74(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi75(in *jlexer.Lexer, out *FuturesInstrumentPriceLimitResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "highest":
			out.Highest = float64(in.Float64Str())
		case "lowest":
			out.Lowest = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi75(out *jwriter.Writer, in FuturesInstrumentPriceLimitResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"highest\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Highest))
	}
	{
		const prefix string = ",\"lowest\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Lowest))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentPriceLimitResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi75(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentPriceLimitResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi75(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentPriceLimitResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi75(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentPriceLimitResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi75(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi76(in *jlexer.Lexer, out *FuturesInstrumentOpenInterestResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "amount":
			out.Amount = int64(in.Int64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi76(out *jwriter.Writer, in FuturesInstrumentOpenInterestResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Amount))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentOpenInterestResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi76(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentOpenInterestResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi76(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentOpenInterestResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi76(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentOpenInterestResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi76(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi77(in *jlexer.Lexer, out *FuturesInstrumentLiquidationResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "loss":
			out.Loss = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi77(out *jwriter.Writer, in FuturesInstrumentLiquidationResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"loss\":"
		out.RawString(prefix)
		out.String(string(in.Loss))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentLiquidationResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi77(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentLiquidationResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi77(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentLiquidationResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi77(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentLiquidationResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi77(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi78(in *jlexer.Lexer, out *FuturesInstrumentLiquidationListResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Page":
			(out.Page).UnmarshalEasyJSON(in)
		case "LiquidationList":
			if in.IsNull() {
				in.Skip()
				out.LiquidationList = nil
			} else {
				in.Delim('[')
				if out.LiquidationList == nil {
					if !in.IsDelim(']') {
						out.LiquidationList = make([]FuturesInstrumentLiquidationResult, 0, 0)
					} else {
						out.LiquidationList = []FuturesInstrumentLiquidationResult{}
					}
				} else {
					out.LiquidationList = (out.LiquidationList)[:0]
				}
				for !in.IsDelim(']') {
					var v114 FuturesInstrumentLiquidationResult
					(v114).UnmarshalEasyJSON(in)
					out.LiquidationList = append(out.LiquidationList, v114)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi78(out *jwriter.Writer, in FuturesInstrumentLiquidationListResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Page\":"
		out.RawString(prefix[1:])
		(in.Page).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"LiquidationList\":"
		out.RawString(prefix)
		if in.LiquidationList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v115, v116 := range in.LiquidationList {
				if v115 > 0 {
					out.RawByte(',')
				}
				(v116).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentLiquidationListResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi78(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentLiquidationListResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi78(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentLiquidationListResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi78(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentLiquidationListResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi78(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi79(in *jlexer.Lexer, out *FuturesInstrumentIndexResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "index":
			out.Index = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi79(out *jwriter.Writer, in FuturesInstrumentIndexResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"index\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Index))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentIndexResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi79(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentIndexResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi79(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentIndexResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi79(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentIndexResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi79(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi80(in *jlexer.Lexer, out *FuturesInstrumentEstimatedPriceResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "settlement_price":
			out.SettlementPrice = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi80(out *jwriter.Writer, in FuturesInstrumentEstimatedPriceResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.SettlementPrice))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentEstimatedPriceResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi80(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentEstimatedPriceResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi80(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentEstimatedPriceResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi80(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentEstimatedPriceResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi80(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi81(in *jlexer.Lexer, out *FuturesInstrumentCurrenciesResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64Str())
		case "name":
			out.Name = string(in.String())
		case "min_size":
			out.MinSize = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi81(out *jwriter.Writer, in FuturesInstrumentCurrenciesResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.Id))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"min_size\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MinSize))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentCurrenciesResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi81(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentCurrenciesResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi81(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentCurrenciesResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi81(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentCurrenciesResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi81(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi82(in *jlexer.Lexer, out *FuturesInstrumentBookResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([][]string, 0, 2)
					} else {
						out.Asks = [][]string{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v117 []string
					if in.IsNull() {
						in.Skip()
						v117 = nil
					} else {
						in.Delim('[')
						if v117 == nil {
							if !in.IsDelim(']') {
								v117 = make([]string, 0, 4)
							} else {
								v117 = []string{}
							}
						} else {
							v117 = (v117)[:0]
						}
						for !in.IsDelim(']') {
							var v118 string
							v118 = string(in.String())
							v117 = append(v117, v118)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v117)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([][]string, 0, 2)
					} else {
						out.Bids = [][]string{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v119 []string
					if in.IsNull() {
						in.Skip()
						v119 = nil
					} else {
						in.Delim('[')
						if v119 == nil {
							if !in.IsDelim(']') {
								v119 = make([]string, 0, 4)
							} else {
								v119 = []string{}
							}
						} else {
							v119 = (v119)[:0]
						}
						for !in.IsDelim(']') {
							var v120 string
							v120 = string(in.String())
							v119 = append(v119, v120)
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v119)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi82(out *jwriter.Writer, in FuturesInstrumentBookResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix[1:])
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v121, v122 := range in.Asks {
				if v121 > 0 {
					out.RawByte(',')
				}
				if v122 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v123, v124 := range v122 {
						if v123 > 0 {
							out.RawByte(',')
						}
						out.String(string(v124))
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v125, v126 := range in.Bids {
				if v125 > 0 {
					out.RawByte(',')
				}
				if v126 == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
					out.RawString("null")
				} else {
					out.RawByte('[')
					for v127, v128 := range v126 {
						if v127 > 0 {
							out.RawByte(',')
						}
						out.String(string(v128))
					}
					out.RawByte(']')
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesInstrumentBookResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi82(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesInstrumentBookResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi82(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesInstrumentBookResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi82(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesInstrumentBookResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi82(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi83(in *jlexer.Lexer, out *FuturesGetOrdersResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.Orders = nil
			} else {
				in.Delim('[')
				if out.Orders == nil {
					if !in.IsDelim(']') {
						out.Orders = make([]FuturesGetOrderResult, 0, 0)
					} else {
						out.Orders = []FuturesGetOrderResult{}
					}
				} else {
					out.Orders = (out.Orders)[:0]
				}
				for !in.IsDelim(']') {
					var v129 FuturesGetOrderResult
					(v129).UnmarshalEasyJSON(in)
					out.Orders = append(out.Orders, v129)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi83(out *jwriter.Writer, in FuturesGetOrdersResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix)
		if in.Orders == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v130, v131 := range in.Orders {
				if v130 > 0 {
					out.RawByte(',')
				}
				(v131).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesGetOrdersResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi83(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesGetOrdersResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi83(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesGetOrdersResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi83(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesGetOrdersResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi83(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi84(in *jlexer.Lexer, out *FuturesGetOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "size":
			out.Size = int64(in.Int64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "filled_qty":
			out.FilledQty = float64(in.Float64Str())
		case "fee":
			out.Fee = float64(in.Float64Str())
		case "order_id":
			out.OrderId = int64(in.Int64Str())
		case "price":
			out.Price = float64(in.Float64Str())
		case "price_avg":
			out.PriceAvg = float64(in.Float64Str())
		case "status":
			out.Status = int(in.IntStr())
		case "type":
			out.Type = int(in.IntStr())
		case "contract_val":
			out.ContractVal = float64(in.Float64Str())
		case "leverage":
			out.Leverage = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi84(out *jwriter.Writer, in FuturesGetOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.Size))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"filled_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.FilledQty))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Fee))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OrderId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Price))
	}
	{
		const prefix string = ",\"price_avg\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.PriceAvg))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.IntStr(int(in.Status))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.IntStr(int(in.Type))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ContractVal))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Leverage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesGetOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi84(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesGetOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi84(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesGetOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi84(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesGetOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi84(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi85(in *jlexer.Lexer, out *FuturesFixedPositionHolding) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "long_margin":
			out.LongMargin = float64(in.Float64Str())
		case "long_liqui_price":
			out.LongLiquiPrice = float64(in.Float64Str())
		case "long_pnl_ratio":
			out.LongPnlRatio = float64(in.Float64Str())
		case "long_leverage":
			out.LongLeverage = float64(in.Float64Str())
		case "short_margin":
			out.ShortMargin = float64(in.Float64Str())
		case "short_liqui_price":
			out.ShortLiquiPrice = float64(in.Float64Str())
		case "short_pnl_ratio":
			out.ShortPnlRatio = float64(in.Float64Str())
		case "short_leverage":
			out.ShortLeverage = float64(in.Float64Str())
		case "long_qty":
			out.LongQty = float64(in.Float64Str())
		case "long_avail_qty":
			out.LongAvailQty = float64(in.Float64Str())
		case "long_avg_cost":
			out.LongAvgCost = float64(in.Float64Str())
		case "long_settlement_price":
			out.LongSettlementPrice = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "short_qty":
			out.ShortQty = float64(in.Float64Str())
		case "short_avail_qty":
			out.ShortAvailQty = float64(in.Float64Str())
		case "short_avg_cost":
			out.ShortAvgCost = float64(in.Float64Str())
		case "short_settlement_price":
			out.ShortSettlementPrice = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi85(out *jwriter.Writer, in FuturesFixedPositionHolding) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"long_margin\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.LongMargin))
	}
	{
		const prefix string = ",\"long_liqui_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongLiquiPrice))
	}
	{
		const prefix string = ",\"long_pnl_ratio\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongPnlRatio))
	}
	{
		const prefix string = ",\"long_leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongLeverage))
	}
	{
		const prefix string = ",\"short_margin\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortMargin))
	}
	{
		const prefix string = ",\"short_liqui_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortLiquiPrice))
	}
	{
		const prefix string = ",\"short_pnl_ratio\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortPnlRatio))
	}
	{
		const prefix string = ",\"short_leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortLeverage))
	}
	{
		const prefix string = ",\"long_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongQty))
	}
	{
		const prefix string = ",\"long_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvailQty))
	}
	{
		const prefix string = ",\"long_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvgCost))
	}
	{
		const prefix string = ",\"long_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongSettlementPrice))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"short_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortQty))
	}
	{
		const prefix string = ",\"short_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvailQty))
	}
	{
		const prefix string = ",\"short_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvgCost))
	}
	{
		const prefix string = ",\"short_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortSettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedPositionHolding) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi85(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedPositionHolding) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi85(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedPositionHolding) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi85(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedPositionHolding) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi85(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi86(in *jlexer.Lexer, out *FuturesFixedPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "holding":
			if in.IsNull() {
				in.Skip()
				out.FixedPosition = nil
			} else {
				in.Delim('[')
				if out.FixedPosition == nil {
					if !in.IsDelim(']') {
						out.FixedPosition = make([]FuturesFixedPositionHolding, 0, 0)
					} else {
						out.FixedPosition = []FuturesFixedPositionHolding{}
					}
				} else {
					out.FixedPosition = (out.FixedPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v132 FuturesFixedPositionHolding
					(v132).UnmarshalEasyJSON(in)
					out.FixedPosition = append(out.FixedPosition, v132)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi86(out *jwriter.Writer, in FuturesFixedPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"holding\":"
		out.RawString(prefix)
		if in.FixedPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v133, v134 := range in.FixedPosition {
				if v133 > 0 {
					out.RawByte(',')
				}
				(v134).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi86(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi86(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi86(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi86(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi87(in *jlexer.Lexer, out *FuturesFixedAccountInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "info":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Info = make(map[string]FuturesFixedAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v135 FuturesFixedAccount
					(v135).UnmarshalEasyJSON(in)
					(out.Info)[key] = v135
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi87(out *jwriter.Writer, in FuturesFixedAccountInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix)
		if in.Info == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v136First := true
			for v136Name, v136Value := range in.Info {
				if v136First {
					v136First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v136Name))
				out.RawByte(':')
				(v136Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedAccountInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi87(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedAccountInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi87(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedAccountInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi87(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedAccountInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi87(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi88(in *jlexer.Lexer, out *FuturesFixedAccountContracts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "available_qty":
			out.AvailableQty = float64(in.Float64Str())
		case "fixed_balance":
			out.FixedBalance = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "margin_fixed":
			out.MarginFixed = float64(in.Float64Str())
		case "margin_for_unfilled":
			out.MarginForUnfilled = float64(in.Float64Str())
		case "margin_frozen":
			out.MarginFrozen = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "unrealizedPnl":
			out.UnrealizedPnl = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi88(out *jwriter.Writer, in FuturesFixedAccountContracts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"available_qty\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.AvailableQty))
	}
	{
		const prefix string = ",\"fixed_balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.FixedBalance))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"margin_fixed\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginFixed))
	}
	{
		const prefix string = ",\"margin_for_unfilled\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginForUnfilled))
	}
	{
		const prefix string = ",\"margin_frozen\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginFrozen))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"unrealizedPnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.UnrealizedPnl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedAccountContracts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi88(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedAccountContracts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi88(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedAccountContracts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi88(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedAccountContracts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi88(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi89(in *jlexer.Lexer, out *FuturesFixedAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "equity":
			out.Equity = float64(in.Float64Str())
		case "total_avail_balance":
			out.TotalAvailBalance = float64(in.Float64Str())
		case "contracts":
			if in.IsNull() {
				in.Skip()
				out.Contracts = nil
			} else {
				in.Delim('[')
				if out.Contracts == nil {
					if !in.IsDelim(']') {
						out.Contracts = make([]FuturesFixedAccountContracts, 0, 0)
					} else {
						out.Contracts = []FuturesFixedAccountContracts{}
					}
				} else {
					out.Contracts = (out.Contracts)[:0]
				}
				for !in.IsDelim(']') {
					var v137 FuturesFixedAccountContracts
					(v137).UnmarshalEasyJSON(in)
					out.Contracts = append(out.Contracts, v137)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi89(out *jwriter.Writer, in FuturesFixedAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix[1:])
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Equity))
	}
	{
		const prefix string = ",\"total_avail_balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TotalAvailBalance))
	}
	{
		const prefix string = ",\"contracts\":"
		out.RawString(prefix)
		if in.Contracts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v138, v139 := range in.Contracts {
				if v138 > 0 {
					out.RawByte(',')
				}
				(v139).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFixedAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi89(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFixedAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi89(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFixedAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi89(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFixedAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi89(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi90(in *jlexer.Lexer, out *FuturesFillsParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.OrderId = string(in.String())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi90(out *jwriter.Writer, in FuturesFillsParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFillsParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi90(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFillsParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi90(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFillsParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi90(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFillsParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi90(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi91(in *jlexer.Lexer, out *FuturesFillResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "trade_id":
			out.TradeId = int64(in.Int64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "price":
			out.Price = float64(in.Float64Str())
		case "order_qty":
			out.OrderQty = float64(in.Float64Str())
		case "order_id":
			out.OrderId = int64(in.Int64Str())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "exec_type":
			out.ExecType = string(in.String())
		case "fee":
			out.Fee = float64(in.Float64Str())
		case "side":
			out.Side = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi91(out *jwriter.Writer, in FuturesFillResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.TradeId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Price))
	}
	{
		const prefix string = ",\"order_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.OrderQty))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.Int64Str(int64(in.OrderId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"exec_type\":"
		out.RawString(prefix)
		out.String(string(in.ExecType))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Fee))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesFillResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi91(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesFillResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi91(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesFillResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi91(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesFillResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi91(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi92(in *jlexer.Lexer, out *FuturesCurrencyLedgerDetails) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.OrderId = int64(in.Int64())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi92(out *jwriter.Writer, in FuturesCurrencyLedgerDetails) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.OrderId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCurrencyLedgerDetails) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi92(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCurrencyLedgerDetails) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi92(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCurrencyLedgerDetails) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi92(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCurrencyLedgerDetails) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi92(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi93(in *jlexer.Lexer, out *FuturesCurrencyLedger) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ledger_id":
			out.LedgerId = int64(in.Int64Str())
		case "amount":
			out.Amount = float64(in.Float64Str())
		case "balance":
			out.Balance = float64(in.Float64Str())
		case "currency":
			out.Currency = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "details":
			(out.Details).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi93(out *jwriter.Writer, in FuturesCurrencyLedger) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ledger_id\":"
		out.RawString(prefix[1:])
		out.Int64Str(int64(in.LedgerId))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Amount))
	}
	{
		const prefix string = ",\"balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Balance))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"details\":"
		out.RawString(prefix)
		(in.Details).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCurrencyLedger) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi93(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCurrencyLedger) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi93(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCurrencyLedger) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi93(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCurrencyLedger) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi93(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi94(in *jlexer.Lexer, out *FuturesCurrencyAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "MarginMode":
			out.MarginMode = string(in.String())
		case "CrossAccount":
			(out.CrossAccount).UnmarshalEasyJSON(in)
		case "FixedAccount":
			(out.FixedAccount).UnmarshalEasyJSON(in)
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi94(out *jwriter.Writer, in FuturesCurrencyAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"MarginMode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"CrossAccount\":"
		out.RawString(prefix)
		(in.CrossAccount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"FixedAccount\":"
		out.RawString(prefix)
		(in.FixedAccount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCurrencyAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi94(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCurrencyAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi94(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCurrencyAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi94(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCurrencyAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi94(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi95(in *jlexer.Lexer, out *FuturesCrossPositionHolding) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "liquidation_price":
			out.LiquidationPrice = float64(in.Float64Str())
		case "leverage":
			out.Leverage = float64(in.Float64Str())
		case "long_qty":
			out.LongQty = float64(in.Float64Str())
		case "long_avail_qty":
			out.LongAvailQty = float64(in.Float64Str())
		case "long_avg_cost":
			out.LongAvgCost = float64(in.Float64Str())
		case "long_settlement_price":
			out.LongSettlementPrice = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "short_qty":
			out.ShortQty = float64(in.Float64Str())
		case "short_avail_qty":
			out.ShortAvailQty = float64(in.Float64Str())
		case "short_avg_cost":
			out.ShortAvgCost = float64(in.Float64Str())
		case "short_settlement_price":
			out.ShortSettlementPrice = float64(in.Float64Str())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi95(out *jwriter.Writer, in FuturesCrossPositionHolding) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"liquidation_price\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.LiquidationPrice))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Leverage))
	}
	{
		const prefix string = ",\"long_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongQty))
	}
	{
		const prefix string = ",\"long_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvailQty))
	}
	{
		const prefix string = ",\"long_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongAvgCost))
	}
	{
		const prefix string = ",\"long_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.LongSettlementPrice))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"short_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortQty))
	}
	{
		const prefix string = ",\"short_avail_qty\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvailQty))
	}
	{
		const prefix string = ",\"short_avg_cost\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortAvgCost))
	}
	{
		const prefix string = ",\"short_settlement_price\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.ShortSettlementPrice))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossPositionHolding) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi95(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossPositionHolding) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi95(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossPositionHolding) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi95(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossPositionHolding) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi95(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi96(in *jlexer.Lexer, out *FuturesCrossPosition) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "holding":
			if in.IsNull() {
				in.Skip()
				out.CrossPosition = nil
			} else {
				in.Delim('[')
				if out.CrossPosition == nil {
					if !in.IsDelim(']') {
						out.CrossPosition = make([]FuturesCrossPositionHolding, 0, 0)
					} else {
						out.CrossPosition = []FuturesCrossPositionHolding{}
					}
				} else {
					out.CrossPosition = (out.CrossPosition)[:0]
				}
				for !in.IsDelim(']') {
					var v140 FuturesCrossPositionHolding
					(v140).UnmarshalEasyJSON(in)
					out.CrossPosition = append(out.CrossPosition, v140)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi96(out *jwriter.Writer, in FuturesCrossPosition) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"holding\":"
		out.RawString(prefix)
		if in.CrossPosition == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v141, v142 := range in.CrossPosition {
				if v141 > 0 {
					out.RawByte(',')
				}
				(v142).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossPosition) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi96(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossPosition) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi96(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossPosition) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi96(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossPosition) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi96(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi97(in *jlexer.Lexer, out *FuturesCrossAccountInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "info":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Info = make(map[string]FuturesCrossAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v143 FuturesCrossAccount
					(v143).UnmarshalEasyJSON(in)
					(out.Info)[key] = v143
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi97(out *jwriter.Writer, in FuturesCrossAccountInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"info\":"
		out.RawString(prefix)
		if in.Info == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v144First := true
			for v144Name, v144Value := range in.Info {
				if v144First {
					v144First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v144Name))
				out.RawByte(':')
				(v144Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossAccountInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi97(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossAccountInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi97(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossAccountInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi97(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossAccountInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi97(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi98(in *jlexer.Lexer, out *FuturesCrossAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "equity":
			out.Equity = float64(in.Float64Str())
		case "margin":
			out.Margin = float64(in.Float64Str())
		case "margin_mode":
			out.MarginMode = string(in.String())
		case "margin_ratio":
			out.MarginRatio = float64(in.Float64Str())
		case "realized_pnl":
			out.RealizedPnl = float64(in.Float64Str())
		case "unrealized_pnl":
			out.UnrealizedPnl = float64(in.Float64Str())
		case "total_avail_balance":
			out.TotalAvailBalance = float64(in.Float64Str())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi98(out *jwriter.Writer, in FuturesCrossAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"equity\":"
		out.RawString(prefix[1:])
		out.Float64Str(float64(in.Equity))
	}
	{
		const prefix string = ",\"margin\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Margin))
	}
	{
		const prefix string = ",\"margin_mode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"margin_ratio\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.MarginRatio))
	}
	{
		const prefix string = ",\"realized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.RealizedPnl))
	}
	{
		const prefix string = ",\"unrealized_pnl\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.UnrealizedPnl))
	}
	{
		const prefix string = ",\"total_avail_balance\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.TotalAvailBalance))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCrossAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi98(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCrossAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi98(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCrossAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi98(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCrossAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi98(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi99(in *jlexer.Lexer, out *FuturesClosePositionResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "close_position_info":
			if in.IsNull() {
				in.Skip()
				out.ClosePositionInfo = nil
			} else {
				in.Delim('[')
				if out.ClosePositionInfo == nil {
					if !in.IsDelim(']') {
						out.ClosePositionInfo = make([]ClosePositionInfo, 0, 1)
					} else {
						out.ClosePositionInfo = []ClosePositionInfo{}
					}
				} else {
					out.ClosePositionInfo = (out.ClosePositionInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v145 ClosePositionInfo
					(v145).UnmarshalEasyJSON(in)
					out.ClosePositionInfo = append(out.ClosePositionInfo, v145)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi99(out *jwriter.Writer, in FuturesClosePositionResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"close_position_info\":"
		out.RawString(prefix)
		if in.ClosePositionInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v146, v147 := range in.ClosePositionInfo {
				if v146 > 0 {
					out.RawByte(',')
				}
				(v147).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesClosePositionResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi99(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesClosePositionResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi99(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesClosePositionResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi99(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesClosePositionResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi99(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi100(in *jlexer.Lexer, out *FuturesClosePositionParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ClosePositionData":
			if in.IsNull() {
				in.Skip()
				out.ClosePositionData = nil
			} else {
				in.Delim('[')
				if out.ClosePositionData == nil {
					if !in.IsDelim(']') {
						out.ClosePositionData = make([]ClosePositionData, 0, 1)
					} else {
						out.ClosePositionData = []ClosePositionData{}
					}
				} else {
					out.ClosePositionData = (out.ClosePositionData)[:0]
				}
				for !in.IsDelim(']') {
					var v148 ClosePositionData
					(v148).UnmarshalEasyJSON(in)
					out.ClosePositionData = append(out.ClosePositionData, v148)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi100(out *jwriter.Writer, in FuturesClosePositionParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ClosePositionData\":"
		out.RawString(prefix[1:])
		if in.ClosePositionData == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v149, v150 := range in.ClosePositionData {
				if v149 > 0 {
					out.RawByte(',')
				}
				(v150).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesClosePositionParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi100(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesClosePositionParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi100(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesClosePositionParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi100(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesClosePositionParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi100(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi101(in *jlexer.Lexer, out *FuturesCancelInstrumentOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_id":
			out.OrderId = string(in.String())
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi101(out *jwriter.Writer, in FuturesCancelInstrumentOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesCancelInstrumentOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi101(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesCancelInstrumentOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi101(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesCancelInstrumentOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi101(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesCancelInstrumentOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi101(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi102(in *jlexer.Lexer, out *FuturesBatchNewOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_info":
			if in.IsNull() {
				in.Skip()
				out.OrderInfo = nil
			} else {
				in.Delim('[')
				if out.OrderInfo == nil {
					if !in.IsDelim(']') {
						out.OrderInfo = make([]OrderInfo, 0, 1)
					} else {
						out.OrderInfo = []OrderInfo{}
					}
				} else {
					out.OrderInfo = (out.OrderInfo)[:0]
				}
				for !in.IsDelim(']') {
					var v151 OrderInfo
					(v151).UnmarshalEasyJSON(in)
					out.OrderInfo = append(out.OrderInfo, v151)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi102(out *jwriter.Writer, in FuturesBatchNewOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_info\":"
		out.RawString(prefix)
		if in.OrderInfo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v152, v153 := range in.OrderInfo {
				if v152 > 0 {
					out.RawByte(',')
				}
				(v153).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesBatchNewOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi102(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesBatchNewOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi102(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesBatchNewOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi102(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesBatchNewOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi102(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi103(in *jlexer.Lexer, out *FuturesBatchNewOrderParams) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "leverage":
			out.Leverage = string(in.String())
		case "orders_data":
			out.OrdersData = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi103(out *jwriter.Writer, in FuturesBatchNewOrderParams) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"leverage\":"
		out.RawString(prefix)
		out.String(string(in.Leverage))
	}
	{
		const prefix string = ",\"orders_data\":"
		out.RawString(prefix)
		out.String(string(in.OrdersData))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesBatchNewOrderParams) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi103(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesBatchNewOrderParams) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi103(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesBatchNewOrderParams) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi103(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesBatchNewOrderParams) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi103(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi104(in *jlexer.Lexer, out *FuturesBatchNewOrderItem) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "client_oid":
			out.ClientOid = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "match_price":
			out.MatchPrice = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi104(out *jwriter.Writer, in FuturesBatchNewOrderItem) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix[1:])
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"match_price\":"
		out.RawString(prefix)
		out.String(string(in.MatchPrice))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesBatchNewOrderItem) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi104(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesBatchNewOrderItem) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi104(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesBatchNewOrderItem) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi104(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesBatchNewOrderItem) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi104(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi105(in *jlexer.Lexer, out *FuturesBatchCancelInstrumentOrdersResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "order_ids":
			if in.IsNull() {
				in.Skip()
				out.OrderIds = nil
			} else {
				in.Delim('[')
				if out.OrderIds == nil {
					if !in.IsDelim(']') {
						out.OrderIds = make([]string, 0, 4)
					} else {
						out.OrderIds = []string{}
					}
				} else {
					out.OrderIds = (out.OrderIds)[:0]
				}
				for !in.IsDelim(']') {
					var v154 string
					v154 = string(in.String())
					out.OrderIds = append(out.OrderIds, v154)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "instrument_id":
			out.InstrumentId = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi105(out *jwriter.Writer, in FuturesBatchCancelInstrumentOrdersResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"order_ids\":"
		out.RawString(prefix)
		if in.OrderIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v155, v156 := range in.OrderIds {
				if v155 > 0 {
					out.RawByte(',')
				}
				out.String(string(v156))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix)
		out.String(string(in.InstrumentId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesBatchCancelInstrumentOrdersResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi105(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesBatchCancelInstrumentOrdersResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi105(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesBatchCancelInstrumentOrdersResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi105(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesBatchCancelInstrumentOrdersResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi105(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi106(in *jlexer.Lexer, out *FuturesAccountsHolds) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "amount":
			out.Amount = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi106(out *jwriter.Writer, in FuturesAccountsHolds) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Amount))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesAccountsHolds) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi106(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesAccountsHolds) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi106(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesAccountsHolds) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi106(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesAccountsHolds) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi106(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi107(in *jlexer.Lexer, out *FuturesAccount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		case "MarginMode":
			out.MarginMode = string(in.String())
		case "CrossAccount":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.CrossAccount = make(map[string]FuturesCrossAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v157 FuturesCrossAccount
					(v157).UnmarshalEasyJSON(in)
					(out.CrossAccount)[key] = v157
					in.WantComma()
				}
				in.Delim('}')
			}
		case "FixedAccount":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.FixedAccount = make(map[string]FuturesFixedAccount)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v158 FuturesFixedAccount
					(v158).UnmarshalEasyJSON(in)
					(out.FixedAccount)[key] = v158
					in.WantComma()
				}
				in.Delim('}')
			}
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi107(out *jwriter.Writer, in FuturesAccount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	{
		const prefix string = ",\"MarginMode\":"
		out.RawString(prefix)
		out.String(string(in.MarginMode))
	}
	{
		const prefix string = ",\"CrossAccount\":"
		out.RawString(prefix)
		if in.CrossAccount == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v159First := true
			for v159Name, v159Value := range in.CrossAccount {
				if v159First {
					v159First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v159Name))
				out.RawByte(':')
				(v159Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"FixedAccount\":"
		out.RawString(prefix)
		if in.FixedAccount == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v160First := true
			for v160Name, v160Value := range in.FixedAccount {
				if v160First {
					v160First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v160Name))
				out.RawByte(':')
				(v160Value).MarshalEasyJSON(out)
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FuturesAccount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi107(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FuturesAccount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi107(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FuturesAccount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi107(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FuturesAccount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi107(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi108(in *jlexer.Lexer, out *ExchangeRate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "rate":
			out.Rate = float64(in.Float64Str())
		case "timestamp":
			out.Timestamp = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi108(out *jwriter.Writer, in ExchangeRate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"rate\":"
		out.RawString(prefix)
		out.Float64Str(float64(in.Rate))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ExchangeRate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi108(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ExchangeRate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi108(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ExchangeRate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi108(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ExchangeRate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi108(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi109(in *jlexer.Lexer, out *Depth400UpdateWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "action":
			out.Action = WSEventAction(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Depth400Data, 0, 8)
					} else {
						out.Data = []*Depth400Data{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v161 *Depth400Data
					if in.IsNull() {
						in.Skip()
						v161 = nil
					} else {
						if v161 == nil {
							v161 = new(Depth400Data)
						}
						(*v161).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v161)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi109(out *jwriter.Writer, in Depth400UpdateWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v162, v163 := range in.Data {
				if v162 > 0 {
					out.RawByte(',')
				}
				if v163 == nil {
					out.RawString("null")
				} else {
					(*v163).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Depth400UpdateWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi109(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Depth400UpdateWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi109(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Depth400UpdateWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi109(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Depth400UpdateWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi109(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi110(in *jlexer.Lexer, out *Depth400PartialWS) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "table":
			out.Table = WSEventTable(in.String())
		case "action":
			out.Action = WSEventAction(in.String())
		case "data":
			if in.IsNull() {
				in.Skip()
				out.Data = nil
			} else {
				in.Delim('[')
				if out.Data == nil {
					if !in.IsDelim(']') {
						out.Data = make([]*Depth400Data, 0, 8)
					} else {
						out.Data = []*Depth400Data{}
					}
				} else {
					out.Data = (out.Data)[:0]
				}
				for !in.IsDelim(']') {
					var v164 *Depth400Data
					if in.IsNull() {
						in.Skip()
						v164 = nil
					} else {
						if v164 == nil {
							v164 = new(Depth400Data)
						}
						(*v164).UnmarshalEasyJSON(in)
					}
					out.Data = append(out.Data, v164)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi110(out *jwriter.Writer, in Depth400PartialWS) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"table\":"
		out.RawString(prefix[1:])
		out.String(string(in.Table))
	}
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix)
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if in.Data == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v165, v166 := range in.Data {
				if v165 > 0 {
					out.RawByte(',')
				}
				if v166 == nil {
					out.RawString("null")
				} else {
					(*v166).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Depth400PartialWS) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi110(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Depth400PartialWS) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi110(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Depth400PartialWS) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi110(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Depth400PartialWS) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi110(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi111(in *jlexer.Lexer, out *Depth400Data) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.Pair = string(in.String())
		case "asks":
			if in.IsNull() {
				in.Skip()
				out.Asks = nil
			} else {
				in.Delim('[')
				if out.Asks == nil {
					if !in.IsDelim(']') {
						out.Asks = make([][3]decimal.Decimal, 0, 1)
					} else {
						out.Asks = [][3]decimal.Decimal{}
					}
				} else {
					out.Asks = (out.Asks)[:0]
				}
				for !in.IsDelim(']') {
					var v167 [3]decimal.Decimal
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('[')
						v168 := 0
						for !in.IsDelim(']') {
							if v168 < 3 {
								if data := in.Raw(); in.Ok() {
									in.AddError(((v167)[v168]).UnmarshalJSON(data))
								}
								v168++
							} else {
								in.SkipRecursive()
							}
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Asks = append(out.Asks, v167)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "bids":
			if in.IsNull() {
				in.Skip()
				out.Bids = nil
			} else {
				in.Delim('[')
				if out.Bids == nil {
					if !in.IsDelim(']') {
						out.Bids = make([][3]decimal.Decimal, 0, 1)
					} else {
						out.Bids = [][3]decimal.Decimal{}
					}
				} else {
					out.Bids = (out.Bids)[:0]
				}
				for !in.IsDelim(']') {
					var v169 [3]decimal.Decimal
					if in.IsNull() {
						in.Skip()
					} else {
						in.Delim('[')
						v170 := 0
						for !in.IsDelim(']') {
							if v170 < 3 {
								if data := in.Raw(); in.Ok() {
									in.AddError(((v169)[v170]).UnmarshalJSON(data))
								}
								v170++
							} else {
								in.SkipRecursive()
							}
							in.WantComma()
						}
						in.Delim(']')
					}
					out.Bids = append(out.Bids, v169)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "timestamp":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Timestamp).UnmarshalJSON(data))
			}
		case "checksum":
			out.Checksum = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi111(out *jwriter.Writer, in Depth400Data) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.Pair))
	}
	{
		const prefix string = ",\"asks\":"
		out.RawString(prefix)
		if in.Asks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v171, v172 := range in.Asks {
				if v171 > 0 {
					out.RawByte(',')
				}
				out.RawByte('[')
				for v173 := range v172 {
					if v173 > 0 {
						out.RawByte(',')
					}
					out.Raw(((v172)[v173]).MarshalJSON())
				}
				out.RawByte(']')
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"bids\":"
		out.RawString(prefix)
		if in.Bids == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v174, v175 := range in.Bids {
				if v174 > 0 {
					out.RawByte(',')
				}
				out.RawByte('[')
				for v176 := range v175 {
					if v176 > 0 {
						out.RawByte(',')
					}
					out.Raw(((v175)[v176]).MarshalJSON())
				}
				out.RawByte(']')
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.Raw((in.Timestamp).MarshalJSON())
	}
	{
		const prefix string = ",\"checksum\":"
		out.RawString(prefix)
		out.Int64(int64(in.Checksum))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Depth400Data) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi111(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Depth400Data) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi111(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Depth400Data) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi111(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Depth400Data) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi111(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi112(in *jlexer.Lexer, out *CodeMessage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error_code":
			out.ErrorCode = int64(in.Int64())
		case "error_message":
			out.ErrorMessage = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi112(out *jwriter.Writer, in CodeMessage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ErrorCode))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CodeMessage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi112(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CodeMessage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi112(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CodeMessage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi112(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CodeMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi112(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi113(in *jlexer.Lexer, out *ClosePositionInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "error_code":
			out.ErrorCode = int64(in.Int64())
		case "error_message":
			out.ErrorMessage = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi113(out *jwriter.Writer, in ClosePositionInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.Int64(int64(in.ErrorCode))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ClosePositionInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi113(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ClosePositionInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi113(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ClosePositionInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi113(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ClosePositionInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi113(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi114(in *jlexer.Lexer, out *ClosePositionData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "lever_rate":
			out.LeverRate = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi114(out *jwriter.Writer, in ClosePositionData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"lever_rate\":"
		out.RawString(prefix)
		out.String(string(in.LeverRate))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ClosePositionData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi114(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ClosePositionData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi114(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ClosePositionData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi114(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ClosePositionData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi114(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi115(in *jlexer.Lexer, out *BizWarmTips) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi115(out *jwriter.Writer, in BizWarmTips) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BizWarmTips) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi115(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BizWarmTips) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi115(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BizWarmTips) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi115(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BizWarmTips) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi115(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi116(in *jlexer.Lexer, out *BaseTradeInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "timestamp":
			out.Timestamp = string(in.String())
		case "trade_id":
			out.TradeId = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi116(out *jwriter.Writer, in BaseTradeInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix[1:])
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix)
		out.String(string(in.TradeId))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseTradeInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi116(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseTradeInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi116(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseTradeInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi116(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseTradeInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi116(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi117(in *jlexer.Lexer, out *BaseTickerInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "last":
			out.Last = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "high_24h":
			out.High24h = string(in.String())
		case "volume_24h":
			out.Volume24h = string(in.String())
		case "low_24h":
			out.Low24h = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi117(out *jwriter.Writer, in BaseTickerInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"last\":"
		out.RawString(prefix)
		out.String(string(in.Last))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"high_24h\":"
		out.RawString(prefix)
		out.String(string(in.High24h))
	}
	{
		const prefix string = ",\"volume_24h\":"
		out.RawString(prefix)
		out.String(string(in.Volume24h))
	}
	{
		const prefix string = ",\"low_24h\":"
		out.RawString(prefix)
		out.String(string(in.Low24h))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseTickerInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi117(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseTickerInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi117(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseTickerInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi117(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseTickerInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi117(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi118(in *jlexer.Lexer, out *BaseSwapOrderResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "order_id":
			out.OrderId = string(in.String())
		case "client_oid":
			out.ClientOid = string(in.String())
		case "error_message":
			out.ErrorMessage = string(in.String())
		case "error_code":
			out.ErrorCode = string(in.String())
		case "result":
			out.Result = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi118(out *jwriter.Writer, in BaseSwapOrderResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix)
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"error_message\":"
		out.RawString(prefix)
		out.String(string(in.ErrorMessage))
	}
	{
		const prefix string = ",\"error_code\":"
		out.RawString(prefix)
		out.String(string(in.ErrorCode))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.String(string(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseSwapOrderResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi118(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseSwapOrderResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi118(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseSwapOrderResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi118(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseSwapOrderResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi118(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi119(in *jlexer.Lexer, out *BasePlaceOrderInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "client_oid":
			out.ClientOid = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "match_price":
			out.MatchPrice = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi119(out *jwriter.Writer, in BasePlaceOrderInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"client_oid\":"
		out.RawString(prefix[1:])
		out.String(string(in.ClientOid))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"match_price\":"
		out.RawString(prefix)
		out.String(string(in.MatchPrice))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BasePlaceOrderInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi119(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BasePlaceOrderInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi119(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BasePlaceOrderInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi119(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BasePlaceOrderInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi119(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi120(in *jlexer.Lexer, out *BaseOrderInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "price_avg":
			out.PriceAvg = string(in.String())
		case "size":
			out.Size = string(in.String())
		case "fee":
			out.Fee = string(in.String())
		case "filled_qty":
			out.FilledQty = string(in.String())
		case "contract_val":
			out.ContractVal = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi120(out *jwriter.Writer, in BaseOrderInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"price_avg\":"
		out.RawString(prefix)
		out.String(string(in.PriceAvg))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.String(string(in.Fee))
	}
	{
		const prefix string = ",\"filled_qty\":"
		out.RawString(prefix)
		out.String(string(in.FilledQty))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.String(string(in.ContractVal))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOrderInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi120(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOrderInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi120(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOrderInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi120(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOrderInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi120(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi121(in *jlexer.Lexer, out *BaseOpSubscriptionArgs) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "channel":
			out.Channel = string(in.String())
		case "instId":
			out.InstId = string(in.String())
		case "ccy":
			out.Ccy = string(in.String())
		case "instType":
			out.InstType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi121(out *jwriter.Writer, in BaseOpSubscriptionArgs) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"channel\":"
		out.RawString(prefix[1:])
		out.String(string(in.Channel))
	}
	if in.InstId != "" {
		const prefix string = ",\"instId\":"
		out.RawString(prefix)
		out.String(string(in.InstId))
	}
	if in.Ccy != "" {
		const prefix string = ",\"ccy\":"
		out.RawString(prefix)
		out.String(string(in.Ccy))
	}
	if in.InstType != "" {
		const prefix string = ",\"instType\":"
		out.RawString(prefix)
		out.String(string(in.InstType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOpSubscriptionArgs) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi121(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOpSubscriptionArgs) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi121(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOpSubscriptionArgs) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi121(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOpSubscriptionArgs) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi121(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi122(in *jlexer.Lexer, out *BaseOpSubscription) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "args":
			if in.IsNull() {
				in.Skip()
				out.Args = nil
			} else {
				in.Delim('[')
				if out.Args == nil {
					if !in.IsDelim(']') {
						out.Args = make([]BaseOpSubscriptionArgs, 0, 1)
					} else {
						out.Args = []BaseOpSubscriptionArgs{}
					}
				} else {
					out.Args = (out.Args)[:0]
				}
				for !in.IsDelim(']') {
					var v177 BaseOpSubscriptionArgs
					(v177).UnmarshalEasyJSON(in)
					out.Args = append(out.Args, v177)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "op":
			out.Op = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi122(out *jwriter.Writer, in BaseOpSubscription) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"args\":"
		out.RawString(prefix[1:])
		if in.Args == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v178, v179 := range in.Args {
				if v178 > 0 {
					out.RawByte(',')
				}
				(v179).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"op\":"
		out.RawString(prefix)
		out.String(string(in.Op))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOpSubscription) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi122(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOpSubscription) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi122(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOpSubscription) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi122(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOpSubscription) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi122(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi123(in *jlexer.Lexer, out *BaseOpLoginArgs) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "apiKey":
			out.ApiKey = string(in.String())
		case "passphrase":
			out.Passphrase = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "sign":
			out.Sign = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi123(out *jwriter.Writer, in BaseOpLoginArgs) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"apiKey\":"
		out.RawString(prefix[1:])
		out.String(string(in.ApiKey))
	}
	{
		const prefix string = ",\"passphrase\":"
		out.RawString(prefix)
		out.String(string(in.Passphrase))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"sign\":"
		out.RawString(prefix)
		out.String(string(in.Sign))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOpLoginArgs) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi123(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOpLoginArgs) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi123(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOpLoginArgs) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi123(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOpLoginArgs) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi123(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi124(in *jlexer.Lexer, out *BaseOpLogin) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "args":
			if in.IsNull() {
				in.Skip()
				out.Args = nil
			} else {
				in.Delim('[')
				if out.Args == nil {
					if !in.IsDelim(']') {
						out.Args = make([]BaseOpLoginArgs, 0, 1)
					} else {
						out.Args = []BaseOpLoginArgs{}
					}
				} else {
					out.Args = (out.Args)[:0]
				}
				for !in.IsDelim(']') {
					var v180 BaseOpLoginArgs
					(v180).UnmarshalEasyJSON(in)
					out.Args = append(out.Args, v180)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "op":
			out.Op = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi124(out *jwriter.Writer, in BaseOpLogin) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"args\":"
		out.RawString(prefix[1:])
		if in.Args == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v181, v182 := range in.Args {
				if v181 > 0 {
					out.RawByte(',')
				}
				(v182).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"op\":"
		out.RawString(prefix)
		out.String(string(in.Op))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOpLogin) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi124(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOpLogin) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi124(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOpLogin) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi124(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOpLogin) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi124(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi125(in *jlexer.Lexer, out *BaseOp) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "op":
			out.Op = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi125(out *jwriter.Writer, in BaseOp) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"op\":"
		out.RawString(prefix[1:])
		out.String(string(in.Op))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseOp) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi125(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseOp) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi125(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseOp) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi125(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseOp) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi125(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi126(in *jlexer.Lexer, out *BaseLiquidationInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "loss":
			out.Loss = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi126(out *jwriter.Writer, in BaseLiquidationInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"loss\":"
		out.RawString(prefix)
		out.String(string(in.Loss))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseLiquidationInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi126(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseLiquidationInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi126(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseLiquidationInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi126(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseLiquidationInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi126(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi127(in *jlexer.Lexer, out *BaseLedgerInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "fee":
			out.Fee = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "amount":
			out.Amount = string(in.String())
		case "ledger_id":
			out.LedgerId = string(in.String())
		case "type":
			out.Type = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi127(out *jwriter.Writer, in BaseLedgerInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.String(string(in.Fee))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.String(string(in.Amount))
	}
	{
		const prefix string = ",\"ledger_id\":"
		out.RawString(prefix)
		out.String(string(in.LedgerId))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseLedgerInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi127(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseLedgerInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi127(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseLedgerInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi127(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseLedgerInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi127(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi128(in *jlexer.Lexer, out *BaseInstrumentInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "quote_currency":
			out.QuoteCurrency = string(in.String())
		case "tick_size":
			out.TickSize = string(in.String())
		case "contract_val":
			out.ContractVal = string(in.String())
		case "listing":
			out.Listing = string(in.String())
		case "underlying_index":
			out.UnderlyingIndex = string(in.String())
		case "delivery":
			out.Delivery = string(in.String())
		case "coin":
			out.Coin = string(in.String())
		case "size_increment":
			out.SizeIncrement = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi128(out *jwriter.Writer, in BaseInstrumentInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"quote_currency\":"
		out.RawString(prefix)
		out.String(string(in.QuoteCurrency))
	}
	{
		const prefix string = ",\"tick_size\":"
		out.RawString(prefix)
		out.String(string(in.TickSize))
	}
	{
		const prefix string = ",\"contract_val\":"
		out.RawString(prefix)
		out.String(string(in.ContractVal))
	}
	{
		const prefix string = ",\"listing\":"
		out.RawString(prefix)
		out.String(string(in.Listing))
	}
	{
		const prefix string = ",\"underlying_index\":"
		out.RawString(prefix)
		out.String(string(in.UnderlyingIndex))
	}
	{
		const prefix string = ",\"delivery\":"
		out.RawString(prefix)
		out.String(string(in.Delivery))
	}
	{
		const prefix string = ",\"coin\":"
		out.RawString(prefix)
		out.String(string(in.Coin))
	}
	{
		const prefix string = ",\"size_increment\":"
		out.RawString(prefix)
		out.String(string(in.SizeIncrement))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseInstrumentInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi128(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseInstrumentInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi128(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseInstrumentInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi128(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseInstrumentInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi128(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi129(in *jlexer.Lexer, out *BaseInstrumentAmount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "amount":
			out.Amount = string(in.String())
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		case "msg":
			out.Msg = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi129(out *jwriter.Writer, in BaseInstrumentAmount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		out.String(string(in.Amount))
	}
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix)
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix)
		out.String(string(in.Msg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseInstrumentAmount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi129(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseInstrumentAmount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi129(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseInstrumentAmount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi129(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseInstrumentAmount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi129(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi130(in *jlexer.Lexer, out *BaseHistoricalFundingRate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "interest_rate":
			out.InterestRate = string(in.String())
		case "funding_rate":
			out.FundingRate = string(in.String())
		case "funding_time":
			out.FundingTime = string(in.String())
		case "realized_rate":
			out.RealizedRate = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi130(out *jwriter.Writer, in BaseHistoricalFundingRate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"interest_rate\":"
		out.RawString(prefix)
		out.String(string(in.InterestRate))
	}
	{
		const prefix string = ",\"funding_rate\":"
		out.RawString(prefix)
		out.String(string(in.FundingRate))
	}
	{
		const prefix string = ",\"funding_time\":"
		out.RawString(prefix)
		out.String(string(in.FundingTime))
	}
	{
		const prefix string = ",\"realized_rate\":"
		out.RawString(prefix)
		out.String(string(in.RealizedRate))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseHistoricalFundingRate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi130(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseHistoricalFundingRate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi130(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseHistoricalFundingRate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi130(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseHistoricalFundingRate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi130(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi131(in *jlexer.Lexer, out *BaseFillInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "instrument_id":
			out.InstrumentId = string(in.String())
		case "order_qty":
			out.OrderQty = string(in.String())
		case "trade_id":
			out.TradeId = string(in.String())
		case "fee":
			out.Fee = string(in.String())
		case "order_id":
			out.OrderId = string(in.String())
		case "timestamp":
			out.Timestamp = string(in.String())
		case "price":
			out.Price = string(in.String())
		case "side":
			out.Side = string(in.String())
		case "exec_type":
			out.ExecType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi131(out *jwriter.Writer, in BaseFillInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"instrument_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.InstrumentId))
	}
	{
		const prefix string = ",\"order_qty\":"
		out.RawString(prefix)
		out.String(string(in.OrderQty))
	}
	{
		const prefix string = ",\"trade_id\":"
		out.RawString(prefix)
		out.String(string(in.TradeId))
	}
	{
		const prefix string = ",\"fee\":"
		out.RawString(prefix)
		out.String(string(in.Fee))
	}
	{
		const prefix string = ",\"order_id\":"
		out.RawString(prefix)
		out.String(string(in.OrderId))
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.String(string(in.Timestamp))
	}
	{
		const prefix string = ",\"price\":"
		out.RawString(prefix)
		out.String(string(in.Price))
	}
	{
		const prefix string = ",\"side\":"
		out.RawString(prefix)
		out.String(string(in.Side))
	}
	{
		const prefix string = ",\"exec_type\":"
		out.RawString(prefix)
		out.String(string(in.ExecType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseFillInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi131(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseFillInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi131(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseFillInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi131(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseFillInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi131(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi132(in *jlexer.Lexer, out *ApiMessage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int(in.Int())
		case "message":
			out.Message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi132(out *jwriter.Writer, in ApiMessage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Code))
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ApiMessage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi132(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ApiMessage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi132(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ApiMessage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi132(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ApiMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi132(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi133(in *jlexer.Lexer, out *AccountCurrency) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "canDep":
			out.CanDeposit = bool(in.Bool())
		case "canWd":
			out.CanWithdraw = bool(in.Bool())
		case "canInternal":
			out.CanInternal = bool(in.Bool())
		case "ccy":
			out.Currency = string(in.String())
		case "name":
			out.FullName = string(in.String())
		case "minWd":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinWithdrawal).UnmarshalJSON(data))
			}
		case "maxFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MaxFee).UnmarshalJSON(data))
			}
		case "minFee":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.MinFee).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi133(out *jwriter.Writer, in AccountCurrency) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"canDep\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.CanDeposit))
	}
	{
		const prefix string = ",\"canWd\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanWithdraw))
	}
	{
		const prefix string = ",\"canInternal\":"
		out.RawString(prefix)
		out.Bool(bool(in.CanInternal))
	}
	{
		const prefix string = ",\"ccy\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.FullName))
	}
	{
		const prefix string = ",\"minWd\":"
		out.RawString(prefix)
		out.Raw((in.MinWithdrawal).MarshalJSON())
	}
	{
		const prefix string = ",\"maxFee\":"
		out.RawString(prefix)
		out.Raw((in.MaxFee).MarshalJSON())
	}
	{
		const prefix string = ",\"minFee\":"
		out.RawString(prefix)
		out.Raw((in.MinFee).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AccountCurrency) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi133(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AccountCurrency) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi133(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AccountCurrency) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi133(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AccountCurrency) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi133(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi134(in *jlexer.Lexer, out *AccountCurrenciesListWrapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "data":
			(out.Data).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi134(out *jwriter.Writer, in AccountCurrenciesListWrapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix[1:])
		(in.Data).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AccountCurrenciesListWrapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi134(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AccountCurrenciesListWrapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi134(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AccountCurrenciesListWrapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi134(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AccountCurrenciesListWrapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi134(l, v)
}
func easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi135(in *jlexer.Lexer, out *AccountCurrenciesList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(AccountCurrenciesList, 0, 8)
			} else {
				*out = AccountCurrenciesList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v183 *AccountCurrency
			if in.IsNull() {
				in.Skip()
				v183 = nil
			} else {
				if v183 == nil {
					v183 = new(AccountCurrency)
				}
				(*v183).UnmarshalEasyJSON(in)
			}
			*out = append(*out, v183)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi135(out *jwriter.Writer, in AccountCurrenciesList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v184, v185 := range in {
			if v184 > 0 {
				out.RawByte(',')
			}
			if v185 == nil {
				out.RawString("null")
			} else {
				(*v185).MarshalEasyJSON(out)
			}
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v AccountCurrenciesList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi135(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AccountCurrenciesList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25363b2dEncodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi135(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AccountCurrenciesList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi135(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AccountCurrenciesList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25363b2dDecodeGithubComDarkfoxs96OpenApiV3SdkOkexGoSdkApi135(l, v)
}
